-- MySQL dump 10.13  Distrib 5.7.17, for Win64 (x86_64)
--
-- Host: localhost    Database: bbs
-- ------------------------------------------------------
-- Server version	5.7.17-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(80) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can add permission',2,'add_permission'),(5,'Can change permission',2,'change_permission'),(6,'Can delete permission',2,'delete_permission'),(7,'Can add group',3,'add_group'),(8,'Can change group',3,'change_group'),(9,'Can delete group',3,'delete_group'),(10,'Can add content type',4,'add_contenttype'),(11,'Can change content type',4,'change_contenttype'),(12,'Can delete content type',4,'delete_contenttype'),(13,'Can add session',5,'add_session'),(14,'Can change session',5,'change_session'),(15,'Can delete session',5,'delete_session'),(16,'Can add 用户信息',6,'add_userinfo'),(17,'Can change 用户信息',6,'change_userinfo'),(18,'Can delete 用户信息',6,'delete_userinfo'),(19,'Can add 文章',7,'add_article'),(20,'Can change 文章',7,'change_article'),(21,'Can delete 文章',7,'delete_article'),(22,'Can add article2 tag',8,'add_article2tag'),(23,'Can change article2 tag',8,'change_article2tag'),(24,'Can delete article2 tag',8,'delete_article2tag'),(25,'Can add 文章详情',9,'add_articledetail'),(26,'Can change 文章详情',9,'change_articledetail'),(27,'Can delete 文章详情',9,'delete_articledetail'),(28,'Can add article up down',10,'add_articleupdown'),(29,'Can change article up down',10,'change_articleupdown'),(30,'Can delete article up down',10,'delete_articleupdown'),(31,'Can add 博客',11,'add_blog'),(32,'Can change 博客',11,'change_blog'),(33,'Can delete 博客',11,'delete_blog'),(34,'Can add 分类',12,'add_category'),(35,'Can change 分类',12,'change_category'),(36,'Can delete 分类',12,'delete_category'),(37,'Can add comment',13,'add_comment'),(38,'Can change comment',13,'change_comment'),(39,'Can delete comment',13,'delete_comment'),(40,'Can add 标签',14,'add_tag'),(41,'Can change 标签',14,'change_tag'),(42,'Can delete 标签',14,'delete_tag');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_article`
--

DROP TABLE IF EXISTS `blog_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_article` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(64) NOT NULL,
  `abstract` varchar(256) NOT NULL,
  `create_time` datetime(6) NOT NULL,
  `modify_time` datetime(6) NOT NULL,
  `category_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `blog_article_category_id_7e38f15e_fk_blog_category_nid` (`category_id`),
  KEY `blog_article_user_id_5beb0cc1_fk_blog_userinfo_nid` (`user_id`),
  CONSTRAINT `blog_article_category_id_7e38f15e_fk_blog_category_nid` FOREIGN KEY (`category_id`) REFERENCES `blog_category` (`nid`),
  CONSTRAINT `blog_article_user_id_5beb0cc1_fk_blog_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_article`
--

LOCK TABLES `blog_article` WRITE;
/*!40000 ALTER TABLE `blog_article` DISABLE KEYS */;
INSERT INTO `blog_article` VALUES (1,'细说Django的admin','在admin.py中只需要将地Model中某个类注册,即可在Admin中进行增删查改的功能,例如:  admin.site.register(models.UserInfo) 这种方式比较简单,如果想要进行更多的定制操作,就需要利用ModelAdmin进行操作','2017-07-25 02:06:29.158000','2018-08-25 02:06:29.158833',1,1),(2,'Markdown编辑器editormd使用过程中的坑希望你不会遇到','最近用express开发了一个博客，现在一直流行markdown进行文档编辑，我也用这种方式进行文档录入，找到了一个框架editor开始以为挺简单，没想到花了好几个小时来增加这个功能，因为没有比较完整的文档所以踩了很多坑，写这个也希望大家有前车之鉴。','2018-05-25 02:07:21.237000','2018-08-25 02:07:21.237167',2,1),(3,'Django时区问题之——Database returned an invalid datetime value','报错：Database returned an invalid datetime value. Are time zone definitions for your database installed?','2018-05-25 09:49:53.932000','2018-08-25 09:49:53.932245',1,1),(4,'Django学习笔记3——Django模板系统','Django模板系统','2018-08-26 14:37:25.215339','2018-08-26 14:37:25.216343',1,1),(5,'Ajax学习','Ajax学习','2018-08-26 14:41:45.538926','2018-08-26 14:41:45.538926',1,1),(6,'editormd的使用','editormd的使用','2018-08-26 14:50:06.199526','2018-08-26 14:50:06.199526',1,1),(7,'test1','testsstststts','2018-08-27 03:09:56.427829','2018-08-27 03:09:56.427829',3,1),(8,'test2','最近用express开发了一个博客，现在一直流行markdown进行文档编辑，我也用这种方式进行文档录入，找到了一个框架editor开始以为挺简单，没想到花了好几个小时来增加这个功能，因为没有比较完整的文档所以踩了很多坑，写这个也希望大家有前车之鉴。','2018-08-27 03:10:20.343785','2018-08-27 03:10:20.343785',3,1),(9,'test3','最近用express开发了一个博客，现在一直流行markdown进行文档编辑，我也用这种方式进行文档录入，找到了一个框架editor开始以为挺简单，没想到花了好几个小时来增加这个功能，因为没有比较完整的文档所以踩了很多坑，写这个也希望大家有前车之鉴。','2018-08-27 03:10:40.704745','2018-08-27 03:10:40.704745',3,1),(10,'test4','css是个啥','2018-08-27 03:10:57.775714','2018-08-27 03:10:57.775714',3,1),(11,'test5','在admin.py中只需要将地Model中某个类注册,即可在Admin中进行增删查改的功能,例如:  admin.site.register(models.UserInfo) 这种方式比较简单,如果想要进行更多的定制操作,就需要利用ModelAdmin进行操作','2018-08-27 03:11:14.172679','2018-08-27 03:11:14.172679',3,1),(12,'test6','Django模板系统','2018-08-27 03:11:31.108649','2018-08-27 03:11:31.108649',3,1),(13,'test7','css是个啥','2018-08-27 03:11:44.107623','2018-08-27 03:11:44.107623',3,1),(38,'前端学习之HTML','## HTML介绍\n### web服务的实质\n\n```\nimport socket\n\nsk = socket.socket()\n\nsk.bind((\"127.0.0.1\", 8080))\nsk.listen(5)\nwhile True:\n    conn, addr = sk.accept()\n  ','2018-08-28 11:52:24.306741','2018-08-28 11:52:24.306741',3,1),(39,'python','menu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-it','2018-08-28 12:29:04.387101','2018-08-28 12:29:04.387101',3,1),(40,'python','wwwwwwwwwwwaf','2018-08-28 12:30:04.031322','2018-08-28 12:30:04.031322',3,1),(41,'python','style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: ','2018-08-28 13:42:33.004254','2018-08-28 13:42:33.004254',3,1),(42,'python','eee','2018-08-29 02:08:21.498041','2018-08-29 02:08:21.498041',1,1),(43,'python','eee','2018-08-29 02:16:31.642684','2018-08-29 02:16:31.642684',1,1),(44,'python','eeees g  sgsg','2018-08-29 02:19:58.346968','2018-08-29 02:19:58.346968',3,1),(45,'wmm的博客','ww','2018-08-29 02:25:34.806287','2018-08-29 02:25:34.806287',2,1),(46,'python','rrrrse  d ','2018-08-29 02:34:39.398451','2018-08-29 02:34:39.398451',2,1),(47,'python','sksks','2018-08-29 02:38:35.180597','2018-08-29 02:38:35.180597',3,1),(48,'python','skslll ','2018-08-29 02:57:04.363260','2018-08-29 02:57:04.363260',4,1),(49,'python','俄罗斯零零\n![](http://pdwd5ogz2.bkt.clouddn.com/u=798102781,3680638829&fm=26&gp=0.jpg)','2018-08-29 03:02:24.725265','2018-08-29 03:02:24.725265',4,1),(50,'python','```\n<form>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n    <input type=\"email\" class=\"form-control\" id=\"examp','2018-08-29 03:06:26.958489','2018-08-29 03:06:26.958489',5,1),(54,'python','<form>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n    <input type=\"email\" class=\"form-control\" id=\"exampleIn','2018-08-29 03:19:50.942662','2018-08-29 03:19:50.942662',1,1),(56,'Django Doc','Built-in template tags and filters¶\nThis document describes Django’s built-in template tags and filters. It is recommended that you use the automatic ','2018-08-30 01:42:46.198429','2018-08-30 01:42:46.198429',9,1);
/*!40000 ALTER TABLE `blog_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_article2tag`
--

DROP TABLE IF EXISTS `blog_article2tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_article2tag` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `blog_article2tag_article_id_tag_id_b0745f42_uniq` (`article_id`,`tag_id`),
  KEY `blog_article2tag_tag_id_389b9a96_fk_blog_tag_nid` (`tag_id`),
  CONSTRAINT `blog_article2tag_article_id_753a2b60_fk_blog_article_nid` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`nid`),
  CONSTRAINT `blog_article2tag_tag_id_389b9a96_fk_blog_tag_nid` FOREIGN KEY (`tag_id`) REFERENCES `blog_tag` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=99 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_article2tag`
--

LOCK TABLES `blog_article2tag` WRITE;
/*!40000 ALTER TABLE `blog_article2tag` DISABLE KEYS */;
INSERT INTO `blog_article2tag` VALUES (1,1,1),(2,1,2),(4,2,2),(3,2,3),(5,13,2),(6,13,3),(43,38,4),(44,39,4),(45,40,1),(46,40,4),(47,41,1),(48,41,2),(49,41,3),(50,41,4),(51,42,2),(52,43,1),(53,43,2),(54,43,3),(55,44,2),(56,45,1),(57,45,2),(58,45,3),(59,46,2),(60,47,1),(61,47,2),(62,48,1),(63,48,2),(84,49,2),(85,49,3),(86,49,25),(87,49,26),(88,50,1),(89,50,26),(92,54,1),(93,54,26),(97,56,2),(98,56,34);
/*!40000 ALTER TABLE `blog_article2tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_articledetail`
--

DROP TABLE IF EXISTS `blog_articledetail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_articledetail` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `content` longtext NOT NULL,
  `article_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `article_id` (`article_id`),
  CONSTRAINT `blog_articledetail_article_id_56993a97_fk_blog_article_nid` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_articledetail`
--

LOCK TABLES `blog_articledetail` WRITE;
/*!40000 ALTER TABLE `blog_articledetail` DISABLE KEYS */;
INSERT INTO `blog_articledetail` VALUES (1,'在admin.py中只需要将地Model中某个类注册,即可在Admin中进行增删查改的功能,例如:\r\n\r\nadmin.site.register(models.UserInfo)\r\n这种方式比较简单,如果想要进行更多的定制操作,就需要利用ModelAdmin进行操作\r\n\r\n方式一\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\')\r\n        \r\n    admin.site.register(models.Book,BookAdmin)\r\n没有设置BookAdmin时,系统默认为ModelAdmin\r\n\r\nmodels.Book实际上是一个列表,也可以写成\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\')\r\n        \r\n    admin.site.register([models.Book,],BookAdmin)\r\n这个参数里可以写多个表名,但要注意的是这里面添加的表名都必须要有list_display中声明要显示的字段\r\n\r\n方式二\r\n\r\nfrom django.contrib import admin\r\nfrom . import models\r\n\r\n@admin.register(models.Book)\r\nclass BookAdmin(admin.ModelAdmin):\r\n    list_display = (\'title\',\'price\',\'publish\')\r\n在ModelAdmin中提供了大量的可定制的功能\r\n\r\n定制admin\r\n\r\n1.list_display:显示列表时,定制显示的列\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\')\r\n在后台管理页面中,显示书的名称,价格以及出版社等信息\r\n\r\n\r\n\r\n在class类中还有如下用法:\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'aaa\')\r\n    \r\n        def aaa(self,obj):\r\n            return obj.title+\"--aaaa\"\r\n显示如下\r\n\r\n\r\n\r\n2.list_display_links:列表时,定制列可以点击跳转\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\')\r\n        list_display_links = (\'title\',\'price\',\'publish\')\r\n在后台页面显示的时候,所显示的列为可以点击跳转\r\n\r\n\r\n\r\n3.list_filter:列表时，定制右侧快速筛选\r\n\r\n例子一:\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n    \r\n        list_display = (\'title\',\'price\',\'publish\')\r\n        list_filter = (\'classification\',\'publish\')\r\n效果如下:\r\n\r\n\r\n\r\n例子二:\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\')\r\n    \r\n        class Ugg(admin.SimpleListFilter):\r\n    \r\n            title=uget(\'类型\')\r\n    \r\n            parameter_name = \"book\"\r\n    \r\n            def lookups(self, request, model_admin):\r\n                \"\"\"\r\n                显示筛选选项,列出价格大于100的书箱的类型\r\n                :param request:\r\n                :param model_admin:\r\n                :return:\r\n                \"\"\"\r\n                return models.Book.objects.filter(price__gt=100).values_list(\"publish\",\"classification\")\r\n    \r\n            def queryset(self, request, queryset):\r\n                \"\"\"\r\n                点击查询时,进行筛选\r\n                :param request:\r\n                :param queryset:\r\n                :return:\r\n                \"\"\"\r\n                v1=self.value()\r\n                return queryset\r\n    \r\n        list_filter = [\"publish\",Ugg,]\r\n    \r\n效果如下:\r\n\r\n\r\n\r\n4.list_select_related:列表时，连表查询是否自动select_related\r\n\r\n使用联表查询可以提高数据库的查询性能\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\')\r\n    \r\n        list_select_related = [\"publish\"]   # 联表查询出版社的信息\r\n    \r\n5. 分页相关\r\n\r\nlist_per_page=10            # 分页,每页显示的数据条数\r\nlist_max_show_all=100       # 分页,显示全部数据时,最多显示的数据条数\r\npaginator=Paginator         # 分布插件\r\n例如:\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n    \r\n        list_display = (\'title\',\'price\',\'publish\')\r\n        list_per_page = 2\r\n效果如下:\r\n\r\n\r\n\r\n6. list_editable:列表时，可以编辑的列\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\')\r\n    \r\n        list_editable = (\'price\',\'publish\')\r\n    \r\n效果如下:\r\n\r\n\r\n\r\n7. search_fields:列表时，模糊搜索的功能\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\')\r\n    \r\n        list_select_related = [\"publish\"]\r\n    \r\n        search_fields = [\'title\',\'classification\']\r\n效果如下:\r\n\r\n\r\n\r\n8. date_hierarchy:列表时，对Date和DateTime类型进行搜索\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\',\'publication_date\')\r\n    \r\n        list_select_related = [\"publish\"]\r\n    \r\n        date_hierarchy=\"publication_date\"\r\n效果如下:\r\n\r\n\r\n\r\n\r\n\r\n9. preserve_filters:详细页面，删除、修改，更新后跳转回列表后，是否保留原搜索条件\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\',\'publication_date\')\r\n    \r\n        list_select_related = [\"publish\"]\r\n    \r\n        search_fields = [\'title\', \'classification\']\r\n    \r\n        preserve_filters=True\r\n效果如下:\r\n\r\n\r\n\r\n10. save_as = False:详细页面，按钮为“Save as new” 或 “Save and add another”\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\',\'publication_date\')\r\n    \r\n        list_select_related = [\"publish\"]\r\n    \r\n        save_as = True\r\n效果如下:\r\n\r\n\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\',\'publication_date\')\r\n    \r\n        list_select_related = [\"publish\"]\r\n    \r\n        save_as = False\r\n效果如下:\r\n\r\n\r\n\r\n11. save_as_continue = True:点击保存并继续编辑\r\n\r\n用法与上一个用法相同\r\n\r\n12. save_on_top = False:详细页面，在页面上方是否也显示保存删除等按钮\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\',\'publication_date\')\r\n    \r\n        list_select_related = [\"publish\"]\r\n    \r\n        save_on_top = False\r\n效果如下:\r\n\r\n\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'publish\',\'publication_date\')\r\n    \r\n        list_select_related = [\"publish\"]\r\n    \r\n        save_on_top = True\r\n        \r\n效果如下:\r\n\r\n\r\n\r\n13. inlines:详细页面，如果有其他表和当前表做FK，那么详细页面可以进行动态增加和删除\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\')\r\n    \r\n    \r\n    class BookInline(admin.StackedInline):\r\n        extra=0\r\n        model=models.Book\r\n    \r\n    class PublishAdmin(admin.ModelAdmin):\r\n        inlines = [BookInline,]\r\n        list_display = [\'name\',\'addr\']\r\n    \r\n    admin.site.register(models.Publish,PublishAdmin)\r\n    \r\n效果如下:\r\n\r\n\r\n\r\n在编辑或添加出版社的时候可以同时添加多本书箱数据,添加书籍信息的时候是纵向添加书籍信息的\r\n\r\n在这里BookInline这个类还可以继承TabularInline这个类实现横向添加书籍信息\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\')\r\n    \r\n    \r\n    class BookInline(admin.TabularInline):\r\n        extra=0\r\n        model=models.Book\r\n    \r\n    class PublishAdmin(admin.ModelAdmin):\r\n        inlines = [BookInline,]\r\n        list_display = [\'name\',\'addr\']\r\n    \r\n    admin.site.register(models.Publish,PublishAdmin)\r\n    \r\n效果如下:\r\n\r\n\r\n\r\n14. action:列表时，定制action中的操作\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\')\r\n    \r\n        def func1(self,request,queryset):       # 定义具体的action的方法\r\n            pass\r\n    \r\n        func1.short_description = \"自定义操作\"   # 在页面上显示方法的名称\r\n    \r\n        actions_on_top = True                   # action在页面上方显示\r\n    \r\n        actions_on_bottom = False               # action在页面下方显示\r\n    \r\n        actions_selection_counter = True        # 显示页面上选择数据的条数\r\n    \r\n        actions=[func1,]                        # 添加定制的action的操作\r\n    \r\n在action列表中,添加一个func1的功能\r\n\r\n\r\n\r\n15. 定制HTML模板\r\n\r\nDjango后台管理页面默认使用的模板是change_list.html\r\n\r\n\r\n\r\n打开change_list.html页面,添加一行\r\n\r\n    <h3>hello python</h3>\r\n刷新浏览器,可以看到\r\n\r\n\r\n\r\n可以设置的选项有:\r\n\r\nadd_form_template = None                        # 添加数据的模板 \r\nchange_form_template = None                     # 修改数据的模板\r\nchange_list_template = None                     # 显示数据的模板\r\ndelete_confirmation_template = None             # 删除数据时确认页面的模板\r\ndelete_selected_confirmation_template = None    # 选中之后删除的确认页面\r\nobject_history_template = None                  # 有ForeignKey时关联数据进行处理的模板\r\n例子:\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\')\r\n    \r\n        change_list_template = [\'change_list1.html\']\r\n        \r\n效果如下:\r\n\r\n\r\n\r\n16. raw_id_fields:详细页面，针对FK和M2M字段变成以Input框形式\r\n\r\n正常显示的时候,FK和M2M字段是通过下拉框来进行操作的\r\n\r\n添加raw_id_fields配置后,针对FK和M2M字段变成以Input框形式\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\'title\',\'price\',\'classification\')\r\n    \r\n        raw_id_fields = (\'publish\',\'authors\')\r\n效果如下:\r\n\r\n\r\n\r\n\r\n\r\n17. fields:详细页面时，显示的字段\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        \r\n        fields = (\'title\',\'price\')\r\n        \r\n效果如下:\r\n\r\n\r\n\r\n18. exclude:详细页面时，排除的字段\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n    \r\n        exclude = (\'classification\',)\r\n效果如下:\r\n\r\n\r\n\r\n19. readonly_fields:详细页面时，只读字段\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        \r\n        readonly_fields = (\'classification\',)\r\n        \r\n效果如下:\r\n\r\n\r\n\r\n20. fieldsets:详细页面时，使用fieldsets标签对数据进行分割显示\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n    \r\n        fieldsets = (\r\n            (\"基本信息\",{\r\n                \"fields\":(\"title\",\"price\",\"publish\",)\r\n            }),\r\n            (\"出版信息\",{\r\n            \"classes\":(\"collapse\",\"wide\",\"extrapretty\"),\r\n            \"fields\":(\"classification\",\"authors\",\"publication_date\",)\r\n        }),\r\n        )\r\n        \r\n效果如下:\r\n\r\n\r\n\r\n\r\n\r\n21. 详细页面时，M2M显示时，数据移动选择(方向:上下和左右)\r\n\r\nfrom django.contrib import admin\r\nfrom . import models\r\n\r\n@admin.register(models.Book)\r\nclass BookAdmin(admin.ModelAdmin):\r\n\r\n    filter_vertical = (\"authors\",)\r\n    \r\n效果如下:\r\n\r\n\r\n\r\nfrom django.contrib import admin\r\nfrom . import models\r\n\r\n@admin.register(models.Book)\r\nclass BookAdmin(admin.ModelAdmin):\r\n\r\n    filter_horizontal = (\"authors\",)\r\n    \r\n效果如下:\r\n\r\n\r\n\r\n22. ordering:列表时，数据排序规则\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\"title\",\"price\",\"classification\",\"publish\")\r\n    \r\n        ordering=(\"-price\",)\r\n效果如下:\r\n\r\n\r\n\r\nfrom django.contrib import admin\r\nfrom . import models\r\n\r\n@admin.register(models.Book)\r\nclass BookAdmin(admin.ModelAdmin):\r\n    list_display = (\"title\",\"price\",\"classification\",\"publish\")\r\n\r\n    ordering=(\"price\",)\r\n效果如下:\r\n\r\n\r\n\r\n23. view_on_site:编辑时，是否在页面上显示view on set\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\"title\",\"price\",\"classification\",\"publish\")\r\n    \r\n        def view_on_site(self,obj):\r\n    \r\n            return \"http://www.baidu.com\"\r\n点击view on set按钮,浏览器会指向\"http://www.baidu.com\"\r\n\r\n\r\n\r\n24. radio_fields:详细页面时，使用radio显示选项（FK默认使用select）\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\"title\",\"price\",\"classification\",\"publish\")\r\n    \r\n        radio_fields = {\"publish\":admin.VERTICAL}\r\n效果如下:\r\n\r\n\r\n\r\n25. show_full_result_count = True:列表时，模糊搜索后面显示的数据个数样式\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\"title\",\"price\",\"classification\",\"publish\")\r\n    \r\n        search_fields = (\'title\',\'classification\')\r\n    \r\n        show_full_result_count = True\r\n效果如下:\r\n\r\n\r\n\r\n26. formfield_overrides = {}:详细页面时，指定现实插件\r\n\r\n27. prepopulated_fields = {}:添加页面，当在某字段填入值后，自动会将值填充到指定字段\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\"title\",\"price\",\"classification\",\"publish\")\r\n    \r\n        search_fields = (\'title\',\'classification\')\r\n    \r\n        prepopulated_fields = {\"title\":(\"classification\",)}\r\n效果如下:\r\n\r\n\r\n\r\n28. form = ModelForm:用于定制用户请求时候表单验证\r\n\r\n未进行配置之前:\r\n\r\n\r\n\r\n修改配置文件:\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    from django.forms import ModelForm\r\n    \r\n    class MyForm(ModelForm):\r\n        class Meta:\r\n            model=models.Book\r\n            fields=\"__all__\"\r\n            error_messages = {\r\n                \"title\": {\'required\': \"书名不能为空\"},\r\n                \"price\": {\'required\': \"价格不能为空\"}\r\n            }  # 自定义错误信息，用户输入错误时显示\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\"title\",\"price\",\"classification\",\"publish\")\r\n    \r\n        search_fields = (\'title\',\'classification\')\r\n    \r\n        form=MyForm\r\n效果如下:\r\n\r\n\r\n\r\n29. empty_value_display = \"列数据为空时，显示默认值\"\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\"title\",\"price\",\"classification\",\"publish\")\r\n    \r\n        search_fields = (\'title\',\'classification\')\r\n    \r\n        empty_value_display=\"列数据为空时,默认显示\"\r\n总结:\r\n\r\n在定制admin的所有的操作的时候都是在配置文件中完成的.\r\n在配置文件中,可以进行配置的有数据表的字段,函数和类\r\n在某个页面中,可以配置使用自定义的模板.\r\n同样的,请求到达Django的时候,也可以配置使其执行自定义的函数\r\nModelAdmin是放置在options.py文件中的.\r\n\r\n打开options.py文件,可以看到ModelAdmin里有一个叫做changelist_view的方法\r\n\r\n    from django.contrib import admin\r\n    from . import models\r\n    \r\n    @admin.register(models.Book)\r\n    class BookAdmin(admin.ModelAdmin):\r\n        list_display = (\"title\",\"price\",\"classification\",\"publish\")\r\n    \r\n        search_fields = (\'title\',\'classification\')\r\n    \r\n        empty_value_display=\"列数据为空时,默认显示\"\r\n可以看到,BookAdmin是继承自ModelAdmin这个类的,ModelAdmin里有一个changelist_view 的方法\r\n\r\n所以在BookAdmin中也可以自定义一个changelist_view的视图函数.\r\n\r\n自定义了changelist_view后,changelist_view这个方法只能对BookAdmin类生效,对别的类不起作用',1),(2,'最近用express开发了一个博客，现在一直流行markdown进行文档编辑，我也用这种方式进行文档录入，找到了一个框架editor开始以为挺简单，没想到花了好几个小时来增加这个功能，因为没有比较完整的文档所以踩了很多坑，写这个也希望大家有前车之鉴。\r\n\r\n1、引入方式\r\n\r\nimage\r\n\r\nlanguages看你需求，如果没有可以不要引入，小编之前只是引用了js和css没想到还有这么多模块文件要引入。\r\n\r\n2、path文件目录\r\n小编渲染是用的swig进行模板渲染的，所以设置了静态文件目录在public下面\r\nimage\r\n\r\n但是我们的editormd 的js有的script引入是动态生成的所以目录找不到，我还特地去看了源码，结果在参数里面可以设置，（下次注意！）\r\nvar editor = editormd(\"editormd\", {\r\n            height:\'300px\',\r\n            syncScrolling : \"single\",\r\n            path : \"../../public/plug/editormd/lib/\" //修改文件目录引用的路径  mode, codemirror, marked... dependents libs path\r\n        });\r\n3、内容上传\r\n\r\n一开始找不到我们编辑好的内容到哪里去取，找了半天也没找到，后面网上查了一下在那一堆动态的dom里面有一个\r\n\r\n$(\'.editormd-markdown-textarea\').val()\r\nimage\r\n\r\n直接查找到这个元素然后通过jq获取val()\r\n有的朋友可能会有疑问为啥我的取到的值和我写的差不多呢？下面我们还是讲他的内容是如何展示的，我们提交数据库的不是带dom的，我们可以通过框架将带有样式的文档解析出来，下面做解释\r\n\r\n4、图片上传\r\n\r\neditor自带图片上传工具post提交，\r\n这里要注意的是后端接收请求要返回的参数和获取的值。\r\n前端配置\r\n\r\nvar editor = editormd(\"editormd\", {\r\n            height:\'300px\',\r\n            syncScrolling : \"single\",\r\n            //启动本地图片上传功能\r\n            imageUpload: true,\r\n            imageFormats   : [\"jpg\", \"jpeg\", \"gif\", \"png\", \"bmp\", \"webp\"],\r\n            imageUploadURL : \"/admin/content/img_up\", //文件提交请求路径\r\n            path : \"../../public/plug/editormd/lib/\" //修改文件目录引用的路径  mode, codemirror, marked... dependents libs path\r\n        });\r\n后端接收我用了multer中间件要设置文件接收的参数editormd-image-file\r\n\r\nimage\r\n\r\n后台返回也要注意\r\n这是一组固定格式要不然前端会报错url设置的是最终上传完的链接，这样才会在前端正常的显示后端可以保存本地也可以用七牛 或者阿里云这种云存储\r\n\r\nres.json({\r\n    success : 1, \r\n    message : \"上传成功！\",\r\n    url: imageSrc\r\n})\r\n5、markdown内容展示\r\n\r\n到这里就比较简单了\r\n\r\n<div id=\"test-editormd-view\">\r\n            <textarea style=\"display:none;\" name=\"test-editormd-markdown-doc\">{{content.content}}</textarea>               \r\n        </div>\r\n<script src=\"https://cdn.bootcss.com/jquery/2.2.3/jquery.min.js\"></script>\r\n<script src=\"../../public/plug/editormd/lib/marked.min.js\"></script>\r\n<script src=\"../../public/plug/editormd/lib/prettify.min.js\"></script>\r\n<script src=\"../../public/plug/editormd/lib/raphael.min.js\"></script>\r\n<script src=\"../../public/plug/editormd/lib/underscore.min.js\"></script>\r\n<script src=\"../../public/plug/editormd/lib/sequence-diagram.min.js\"></script>\r\n<script src=\"../../public/plug/editormd/lib/flowchart.min.js\"></script>\r\n<script src=\"../../public/plug/editormd/lib/jquery.flowchart.min.js\"></script>\r\n<script src=\"../../public/plug/editormd/editormd.js\"></script>\r\n<script type=\"text/javascript\">\r\n    testEditormdView2 = editormd.markdownToHTML(\"test-editormd-view\", {\r\n        htmlDecode      : \"style,script,iframe\",  // you can filter tags decode\r\n        emoji           : true,\r\n        taskList        : true,\r\n        tex             : true,  // 默认不解析\r\n        flowChart       : true,  // 默认不解析\r\n        sequenceDiagram : true,  // 默认不解析\r\n    });\r\n</script>\r\n完结\r\n\r\n作者：jamesdanner\r\n链接：https://www.jianshu.com/p/176a446e5b64\r\n來源：简书\r\n简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。',2),(3,'---\r\ntitle: Django时区问题之——Database returned an invalid datetime value\r\ndate: 2018-08-23 13:02:43\r\ntags: Django\r\ncategories: python\r\n---\r\n## 错误详情\r\n报错：Database returned an invalid datetime value. Are time zone definitions for your database installed?\r\n\r\n```\r\nTraceback:\r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/core/handlers/exception.py\" in inner\r\n  41.             response = get_response(request)\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/core/handlers/base.py\" in _get_response\r\n  187.                 response = self.process_exception_by_middleware(e, request)\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/core/handlers/base.py\" in _get_response\r\n  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/views/generic/base.py\" in view\r\n  68.             return self.dispatch(request, *args, **kwargs)\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/views/generic/base.py\" in dispatch\r\n  88.         return handler(request, *args, **kwargs)\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/views/generic/dates.py\" in get\r\n  348.         self.date_list, self.object_list, extra_context = self.get_dated_items()\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/views/generic/dates.py\" in get_dated_items\r\n  434.         date_list = self.get_date_list(qs, ordering=\'DESC\')\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/views/generic/dates.py\" in get_date_list\r\n  413.         if date_list is not None and not date_list and not allow_empty:\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/db/models/query.py\" in __bool__\r\n  254.         self._fetch_all()\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/db/models/query.py\" in _fetch_all\r\n  1105.             self._result_cache = list(self._iterable_class(self))\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/db/models/query.py\" in __iter__\r\n  152.         for row in compiler.results_iter():\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/db/models/sql/compiler.py\" in results_iter\r\n  834.                     row = self.apply_converters(row, converters)\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/db/models/sql/compiler.py\" in apply_converters\r\n  819.                 value = converter(value, expression, self.connection, self.query.context)\r\n \r\nFile \"/var/env/pyblog/lib/python3.5/site-packages/django/db/models/functions/datetime.py\" in convert_value\r\n  198.                         \"Database returned an invalid datetime value. \"\r\n\r\n```\r\n## 解决方法\r\n### linux\r\n使用`mysql_tzinfo_to_sql`命令在名为mysql的数据库中填充time_zone表：\r\n```\r\nroot@ubuntu:~# mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root -p mysql\r\nEnter password:\r\nWarning: Unable to load \'/usr/share/zoneinfo/iso3166.tab\' as time zone. Skipping it.\r\nWarning: Unable to load \'/usr/share/zoneinfo/leap-seconds.list\' as time zone. Skipping it.\r\nWarning: Unable to load \'/usr/share/zoneinfo/zone.tab\' as time zone. Skipping it.\r\nWarning: Unable to load \'/usr/share/zoneinfo/zone1970.tab\' as time zone. Skipping it.\r\n```\r\n### Windows\r\n- 在[此页面](https://dev.mysql.com/downloads/timezones.html)下载时区文件\r\n- 将压缩包中的文件解压至MySQL安装目录下的/data/mysql/中，执行该文件填充时区表，覆盖原有文件。',3),(4,'## Django模板系统\r\n**[我是官方文档](https://docs.djangoproject.com/en/1.11/ref/templates/builtins/#std:templatetag-for)**\r\n### 常用语法\r\n>我们只需要记两种特殊符号：`{{  }}`和 `{% %}`\r\n>\r\n>&nbsp;\r\n其中，变量相关的用{{}}，逻辑相关的用{%%}。\r\n#### 变量\r\n>{{变量名}}，变量名由字母数字和下划线组成；\r\n>点（.）在模板语言中有特殊的含义，用来获取对象的相应属性值；\r\n\r\n示例:\r\n\r\n```\r\n# views.py\r\n\r\ndef template_test(request):\r\n    l = [11, 22, 33]\r\n    d = {\"name\": \"lee\"}\r\n\r\n    class Person(object):\r\n        def __init__(self, name, age):\r\n            self.name = name\r\n            self.age = age\r\n\r\n        def dream(self):\r\n            return \"{} is dreaming...\".format(self.name)\r\n\r\n    Lee = Person(name=\"lee\", age=24)\r\n    Leon = Person(name=\"Leon\", age=18)\r\n    Sam = Person(name=\"Sam\", age=20)\r\n\r\n    person_list = [lee, Leon, Sam]\r\n    return render(request, \"template_test.html\", {\"l\": l, \"d\": d, \"person_list\": person_list})\r\n```\r\n\r\n```\r\n# 模板中支持的写法\r\n\r\n{# 取l中的第一个参数 #}\r\n{{ l.0 }}\r\n{# 取字典中key的值 #}\r\n{{ d.name }}\r\n{# 取对象的name属性 #}\r\n{{ person_list.0.name }}\r\n{# .操作只能调用不带参数的方法 #}\r\n{{ person_list.0.dream }}\r\n```\r\n#### Filters\r\n>语法: {{value|filter_name: 参数}}\r\n\r\n\r\n**default**\r\n\r\n```\r\n{{ value|default: \"nothing\"}}\r\n# 如果value值没传的话就显示nothing\r\n\r\n```\r\n**length**\r\n\r\n```\r\n{{ value|length }}\r\n# 注意: \'|\'左右没有空格没有空格没有空格\r\n# 返回value的长度，如 value=[\'a\', \'b\', \'c\', \'d\']的话，就显示4.\r\n```\r\n**filesizeformat**\r\n>将值格式化为一个 “人类可读的” 文件尺寸 （例如 \'13 KB\', \'4.1 MB\', \'102 bytes\', 等等）, 如果 value 是 123456789，输出将会是 117.7 MB。\r\n```\r\n{{ value|filesizeformat }}\r\n\r\n```\r\n**slice**\r\n\r\n```\r\n# 切片\r\n{{value|slice:\"2:-1\"}}\r\n```\r\n**date**\r\n\r\n```\r\n# 格式化日期\r\n{{ value|date:\"Y-m-d H:i:s\"}}\r\n# 注意和python内置不一致\r\n```\r\n**safe**\r\n>Django的模板中会对HTML标签和JS等语法标签进行自动转义，原因显而易见，这样是为了安全。但是有的时候我们可能不希望这些HTML元素被转义，比如我们做一个内容管理系统，后台添加的文章中是经过修饰的，这些修饰可能是通过一个类似于FCKeditor编辑加注了HTML修饰符的文本，如果自动转义的话显示的就是保护HTML标签的源文件。为了在Django中关闭HTML的自动转义有两种方式，如果是一个单独的变量我们可以通过过滤器“|safe”的方式告诉Django这段代码是安全的不必转义。\r\n\r\n比如: `value = \"<a href=\'#\'>点我</a>\"`\r\n\r\n```\r\n{{ value|safe}}\r\n```\r\n**truncatechars**\r\n>如果字符串字符多于指定的字符数量，那么会被截断。截断的字符串将以可翻译的省略号序列（“...”）结尾。\r\n\r\n```\r\n# 参数：截断的字符数\r\n{{ value|truncatechars:9}}\r\n\r\n```\r\n#### 自定义filter\r\n>自定义过滤器只是带有一个或两个参数的Python函数:\r\n>\r\n- 变量（输入）的值 - -不一定是一个字符串\r\n-  参数的值 - 这可以有一个默认值，或完全省略\r\n>\r\n>&nbsp;\r\n>例如，在过滤器{{var | foo：“bar”}}中，过滤器foo将传递变量var和参数“bar”。\r\n\r\n\r\n**自定义filter代码文件摆放位置：**\r\n\r\n```\r\napp01/\r\n    __init__.py\r\n    models.py\r\n    templatetags/  # 在app01下面新建一个package templatetags\r\n        __init__.py\r\n        app01_filters.py  # 建一个存放自定义filter的文件\r\n    views.py\r\n```\r\n**编写自定义filter**\r\n\r\n```\r\nfrom django import template\r\n\r\nregister = template.Library()\r\n\r\n\r\n@register.filter(name=\'cut\')\r\ndef cut(value, arg):\r\n    return value.replace(arg, \'\')\r\n\r\n\r\n@register.filter(name=\'add_foo\')\r\ndef add_foo(value):\r\n    return \"{} foo\".format(value)\r\n```\r\n**使用自定义的filter**\r\n\r\n```\r\n{#先导入我们自定义filter的那个文件#}\r\n{% load myweb_filters %}\r\n\r\n{#使用我们自定义的filter#}\r\n{{ somevariable|cut:\'0\' }}\r\n{{ someone|add_foo }}\r\n```\r\n#### Tags\r\n**for**\r\n\r\n```\r\n<ul>\r\n{% for user in user_list %}\r\n    <li>{{ user.name }}</li>\r\n{% endfor %}\r\n</ul>\r\n```\r\n>for循环可用的一些参数：\r\n|Variable|Description|\r\n|-|-|\r\n|forloop.counter|当前循环的索引值(1开始)|\r\n|forloop.counter0|当前循环的索引值(0开始)|\r\n|forloop.revcounter|当前循环倒序索引值|\r\n|forloop.revcounyer0|当前循环的倒序索引值|\r\n|forloop.first|当前循环是否为第一次循环(bool)|\r\n|forloop.last|当前循环是否为最后依次循环(bool)|\r\n|forloop.parentloop|本次循环的外层循环| \r\n\r\n**for ... empty**\r\n\r\n```\r\n<ul>\r\n{% for user in user_list %}\r\n    <li>{{ user.name }}</li>\r\n{% empty %}\r\n    <li>空空如也: for遍历的对象为空时执行</li>\r\n{% endfor %}\r\n</ul>\r\n```\r\n**if,elif和else**\r\n\r\n```\r\n{% if user_list %}\r\n    用户总数：{{ user_list|length }}\r\n{% elif black_list %}\r\n    黑名单数：{{ black_list|length }}\r\n{% else %}\r\n    没有用户\r\n{% endif %}\r\n```\r\n**当然也可以只有if和else**\r\n\r\n```\r\n{% if user_list|length > 5 %}\r\n  七座豪华SUV\r\n{% else %}\r\n    黄包车\r\n{% endif %}\r\n```\r\n>if语句支持 and 、or、==、>、<、!=、<=、>=、in、not in、is、is not判断。\r\n\r\n**with**\r\n>with 可以定义一个临时变量,用以代替比较长的表达式\r\n\r\n```\r\n{% with user_list|length as cnt %}\r\n    {{ cnt }} user{{ cnt|pluralize }}\r\n{% endwith %}\r\n```\r\n#### csrf_token\r\n>这个标签用于跨站请求伪造保护, 在页面的form表单里面写上{% csrf_token %}.\r\n#### 注释\r\n\r\n```\r\n{# 我是注释 #}\r\n```\r\n#### 注意事项\r\n>1. Django的模板语言不支持连续判断，即不支持以下写法(其实支持的, 只不过逻辑和python内置不同)：\r\n\r\n```\r\n{% if a > b > c %}\r\n...\r\n{% endif %}\r\n```\r\n>2. Django的模板语言中属性的优先级大于方法!!!\r\n\r\n```\r\ndef xx(request):\r\n    d = {\"a\": 1, \"b\": 2, \"c\": 3, \"items\": \"100\"}\r\n    return render(request, \"xx.html\", {\"data\": d})\r\n```\r\n>如上，我们在使用render方法渲染一个页面的时候，传的字典d有一个key是items并且还有默认的 d.items() 方法，此时在模板语言中:\r\n\r\n```\r\n{{ data.items }}\r\n```\r\n>默认会取d的items key的值。\r\n\r\n\r\n### 母版\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"zh\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>母版</title>\r\n    <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n    {% block page-css %}\r\n\r\n    {% endblock page-css %}\r\n</head>\r\n<body>\r\n{% include \'导航条.html\' %}\r\n<h1>这是母版的标题</h1>\r\n\r\n{% block page-main %}\r\n\r\n{% endblock page-main %}\r\n\r\n<h1>母版底部内容</h1>\r\n{% block page-js %}\r\n\r\n{% endblock page-js %}\r\n\r\n<script src=\"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js\"></script>\r\n<script src=\"https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n</body>\r\n</html>\r\n```\r\n>注意：我们通常会在母板中定义页面专用的CSS块和JS块，方便子页面替换。\r\n\r\n### 继承母版\r\n>在子页面中在页面最上方使用下面的语法来继承母板。\r\n\r\n```\r\n{% extends \'母版.html\' %}\r\n\r\n```\r\n### 块（block）\r\n>通过在母板中使用`{% block  xxx %}`来定义\"块\"。\r\n&nbsp;\r\n在子页面中通过定义母板中的block名来对应替换母板中相应的内容。\r\n\r\n```\r\n{% block page-main %}\r\n    <p>我是子页面</p>\r\n    <hr>\r\n    <p>替换模板中的block</p>\r\n{% endblock page-main %}\r\n```\r\n### 组件\r\n>可以将常用的页面内容如导航条，页尾信息等组件保存在单独的文件中，然后在需要使用的地方按如下语法导入即可。\r\n\r\n```\r\n{% include \'导航条.html\' %}\r\n```\r\n### 静态文件相关\r\n\r\n```\r\n{% load static %}\r\n<img src=\"{% static \"images/hi.jpg\" %}\" alt=\"Hi!\" />\r\n```\r\n>引用JS文件时使用：\r\n\r\n```\r\n{% load static %}\r\n<script src=\"{% static \"mytest.js\" %}\"></script>\r\n```\r\n>某个文件多处被用到可以存为一个变量\r\n\r\n```\r\n{% load static %}\r\n{% static \"images/hi.jpg\" as myphoto %}\r\n<img src=\"{{ myphoto }}\"></img>\r\n```\r\n#### 使用get_static_prefix\r\n\r\n```\r\n{% load static %}\r\n<img src=\"{% get_static_prefix %}images/hi.jpg\" alt=\"Hi!\" />\r\n```\r\n>或者：\r\n\r\n```\r\n% load static %}\r\n{% get_static_prefix as STATIC_PREFIX %}\r\n\r\n<img src=\"{{ STATIC_PREFIX }}images/hi.jpg\" alt=\"Hi!\" />\r\n<img src=\"{{ STATIC_PREFIX }}images/hi2.jpg\" alt=\"Hello!\" />\r\n```\r\n####  自定义simpletag\r\n>自定义simpletag和自定义filter类似，只不过接收更灵活的参数。\r\n\r\n定义注册simple tag示例：\r\n\r\n```\r\n# mytags.py\r\n\r\nfrom django import template\r\n\r\nregister = template.Library()\r\n\r\n\r\n@register.simple_tag(name=\'plus\')\r\ndef plus(a, b, c):\r\n    return int(a) + int(b) + int(c)\r\n```\r\n使用自定义simple tag:\r\n\r\n```\r\n    <div>\r\n        {% load mytags %}\r\n        {% plus 1 \'2\' 3.4 %}\r\n```\r\n\r\n#### inclusion_tag\r\n>多用于返回html代码片段\r\n\r\n示例：\r\ntemplatetags/my_inclusion.py\r\n\r\n```\r\nfrom django import template\r\n\r\nregister = template.Library()\r\n\r\n\r\n@register.inclusion_tag(\'result.html\')\r\ndef show_results(n):\r\n    n = 1 if n < 1 else int(n)\r\n    data = [\"第{}项\".format(i) for i in range(1, n+1)]\r\n    return {\"data\": data}\r\n```\r\ntemplates/snippets/result.html\r\n\r\n```\r\n<ul>\r\n  {% for choice in data %}\r\n    <li>{{ choice }}</li>\r\n  {% endfor %}\r\n</ul>\r\n```\r\ntemplates/index.html\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <title>inclusion_tag test</title>\r\n</head>\r\n<body>\r\n\r\n{% load inclusion_tag_test %}\r\n\r\n{% show_results 10 %}\r\n</body>\r\n</html>\r\n```',4),(5,'## Background Knowledge\r\n### 什么是 JSON ？\r\n>- JSON 指的是 JavaScript 对象表示法（JavaScript Object Notation）\r\n- JSON 是轻量级的文本数据交换格式\r\n- JSON 独立于语言 *\r\n- JSON 具有自我描述性，更易理解\r\n>\r\n>&nbsp;\r\n>JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。\r\n>![这里写图片描述](https://img-blog.csdn.net/20180803214409421?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTA1MjU2OTQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70) \r\n\r\n合格的json对象：\r\n\r\n```\r\n[\"one\", \"two\", \"three\"]\r\n{ \"one\": 1, \"two\": 2, \"three\": 3 }\r\n{\"names\": [\"张三\", \"李四\"] }\r\n[ { \"name\": \"张三\"}, {\"name\": \"李四\"} ]\r\n```\r\n 不合格的json对象：\r\n\r\n```\r\n{ name: \"张三\", \'age\': 32 }  // 属性名必须使用双引号\r\n[32, 64, 128, 0xFFF] // 不能使用十六进制值\r\n{ \"name\": \"张三\", \"age\": undefined }  // 不能使用undefined\r\n{ \"name\": \"张三\",\r\n  \"birthday\": new Date(\'Fri, 26 Aug 2011 07:13:10 GMT\'),\r\n  \"getName\":  function() {return this.name;}  // 不能使用函数和日期对象\r\n}\r\n```\r\n### stringify与parse方法\r\n>avaScript中关于JSON对象和字符串转换的两个方法：\r\n&nbsp;\r\nJSON.parse(): 用于将一个 JSON 字符串转换为 JavaScript 对象　\r\n\r\n```\r\nJSON.parse(\'{\"name\":\"Q1mi\"}\');\r\nJSON.parse(\'{name:\"lee\"}\') ;   // 错误\r\nJSON.parse(\'[18,undefined]\') ;   // 错误\r\n```\r\n>JSON.stringify(): 用于将 JavaScript 值转换为 JSON 字符串。　\r\n\r\n```\r\nJSON.stringify({\"name\":\"lee\"})\r\n\r\n```\r\n### JSON和XML的比较\r\n>SON 格式于2001年由 Douglas Crockford 提出，目的就是取代繁琐笨重的 XML 格式。\r\n&nbsp;\r\nJSON 格式有两个显著的优点：书写简单，一目了然；符合 JavaScript 原生语法，可以由解释引擎直接处理，不用另外添加解析代码。所以，JSON迅速被接受，已经成为各大网站交换数据的标准格式，并被写入ECMAScript 5，成为标准的一部分。\r\n&nbsp;\r\nXML和JSON都使用结构化方法来标记数据，下面来做一个简单的比较。\r\n\r\n用XML表示中国部分省市数据如下：\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<country>\r\n    <name>中国</name>\r\n    <province>\r\n        <name>黑龙江</name>\r\n        <cities>\r\n            <city>哈尔滨</city>\r\n            <city>大庆</city>\r\n        </cities>\r\n    </province>\r\n    <province>\r\n        <name>广东</name>\r\n        <cities>\r\n            <city>广州</city>\r\n            <city>深圳</city>\r\n            <city>珠海</city>\r\n        </cities>\r\n    </province>\r\n    <province>\r\n        <name>台湾</name>\r\n        <cities>\r\n            <city>台北</city>\r\n            <city>高雄</city>\r\n        </cities>\r\n    </province>\r\n    <province>\r\n        <name>新疆</name>\r\n        <cities>\r\n            <city>乌鲁木齐</city>\r\n        </cities>\r\n    </province>\r\n</country>\r\n```\r\n用JSON表示如下：\r\n\r\n```\r\n{\r\n    \"name\": \"中国\",\r\n    \"province\": [{\r\n        \"name\": \"黑龙江\",\r\n        \"cities\": {\r\n            \"city\": [\"哈尔滨\", \"大庆\"]\r\n        }\r\n    }, {\r\n        \"name\": \"广东\",\r\n        \"cities\": {\r\n            \"city\": [\"广州\", \"深圳\", \"珠海\"]\r\n        }\r\n    }, {\r\n        \"name\": \"台湾\",\r\n        \"cities\": {\r\n            \"city\": [\"台北\", \"高雄\"]\r\n        }\r\n    }, {\r\n        \"name\": \"新疆\",\r\n        \"cities\": {\r\n            \"city\": [\"乌鲁木齐\"]\r\n        }\r\n    }]\r\n}\r\n```\r\n>由上面的两端代码可以看出，JSON 简单的语法格式和清晰的层次结构明显要比 XML 容易阅读，并且在数据交换方面，由于 JSON 所使用的字符要比 XML 少得多，可以大大得节约传输数据所占用得带宽。 \r\n\r\n## AJAX简介\r\n>AJAX（Asynchronous Javascript And XML）翻译成中文就是“异步的Javascript和XML”。即使用Javascript语言与服务器进行异步交互，传输的数据为XML（当然，传输的数据不只是XML）。\r\n&nbsp;\r\nAJAX 不是新的编程语言，而是一种使用现有标准的新方法。\r\n&nbsp;\r\nAJAX 最大的优点是在不重新加载整个页面的情况下，可以与服务器交换数据并更新部分网页内容。（这一特点给用户的感受是在不知不觉中完成请求和响应过程）\r\n&nbsp;\r\nAJAX 不需要任何浏览器插件，但需要用户允许JavaScript在浏览器上执行。\r\n>\r\n>- 同步交互：客户端发出一个请求后，需要等待服务器响应结束后，才能发出第二个请求；\r\n- 异步交互：客户端发出一个请求后，无需等待服务器响应结束，就可以发出第二个请求。 \r\n\r\n#### 示例\r\n>页面输入两个整数，通过AJAX传输到后端计算出结果并返回。\r\n\r\n**HTML部分代码:**\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"zh\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>AJAX计算器</title>\r\n    <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n</head>\r\n<body>\r\n\r\n<input type=\"text\" name=\"i1\" id=\"i1\">+\r\n<input type=\"text\" name=\"i2\" id=\"i2\">=\r\n<input type=\"text\" name=\"i3\" id=\"i3\">\r\n<input type=\"button\" value=\"AJAX提交\" id=\"b1\">\r\n\r\n\r\n<script src=\"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js\"></script>\r\n<script src=\"https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n\r\n<script>\r\n    $(\'#b1\').on(\'click\', function () {\r\n        $.ajax({\r\n            url: \"{% url \'cal\' %}\",\r\n            type: \"GET\",\r\n            data:{\'i1\': $(\'#i1\').val(), \'i2\': $(\'#i2\').val()},\r\n            success: function (data) {\r\n                $(\'#i3\').val(data)\r\n            }\r\n        })\r\n\r\n    })\r\n</script>\r\n\r\n</body>\r\n</html>\r\n```\r\n**views.py**\r\n\r\n```\r\ndef ajax_demo(request):\r\n    return render(request, \'AJAX计算器.html\')\r\n\r\n\r\ndef cal(request):\r\n    i1 = int(request.GET.get(\'i1\'))\r\n    i2 = int(request.GET.get(\'i2\'))\r\n    ret = i1 + i2\r\n    return HttpResponse(ret)\r\n\r\n```\r\n### AJAX常见应用情景\r\n>搜索引擎根据用户输入的关键字，自动提示检索关键字。还有一个很重要的应用场景就是注册时候的用户名的查重。\r\n&nbsp;\r\n其实这里就使用了AJAX技术！当文件框发生了输入变化时，使用AJAX技术向服务器发送一个请求，然后服务器会把查询到的结果响应给浏览器，最后再把后端返回的结果展示出来。\r\n>\r\n- 整个过程中页面没有刷新，只是刷新页面中的局部位置而已！\r\n-  当请求发出后，浏览器还可以进行其他操作，无需等待服务器的响应！\r\n![这里写图片描述](https://img-blog.csdn.net/20180803223710880?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTA1MjU2OTQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70) \r\n\r\n>当输入用户名后，把光标移动到其他表单项上时，浏览器会使用AJAX技术向服务器发出请求，服务器会查询名为lemontree7777777的用户是否存在，最终服务器返回true表示名为lemontree7777777的用户已经存在了，浏览器在得到结果后显示“用户名已被注册！”。\r\n\r\n### AJAX的优缺点\r\n>优点：\r\n>\r\n- AJAX使用JavaScript技术向服务器发送异步请求；\r\n- AJAX请求无须刷新整个页面；\r\n- 因为服务器响应内容不再是整个页面，而是页面中的部分内容，所以AJAX性能高；\r\n\r\n## jQuery实现的AJAX\r\n**最基本的jQuery发送AJAX请求示例：**\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"zh-CN\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <title>ajax test</title>\r\n  <script src=\"https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js\"></script>\r\n</head>\r\n<body>\r\n<button id=\"ajaxTest\">AJAX 测试</button>\r\n<script>\r\n  $(\"#ajaxTest\").click(function () {\r\n  // 注意 url的值要加引号，特别是在使用Django反向解析的时候!!!\r\n    $.ajax({\r\n      url: \"/ajax_test/\", \r\n      type: \"POST\",\r\n      data: {username: \"lee\", password: 123456},\r\n      success: function (data) {\r\n        alert(data)\r\n      }\r\n    })\r\n  })\r\n</script>\r\n</body>\r\n</html>\r\n```\r\n### $.ajax参数\r\n>data参数中的键值对，如果值值不为字符串，需要将其转换成字符串类型。\r\n\r\n```\r\n$(\"#b1\").on(\"click\", function () {\r\n    $.ajax({\r\n      url:\"/ajax_add/\",\r\n      type:\"GET\",\r\n      data:{\"i1\":$(\"#i1\").val(),\"i2\":$(\"#i2\").val(),\"hehe\": JSON.stringify([1, 2, 3])},\r\n      success:function (data) {\r\n        $(\"#i3\").val(data);\r\n      }\r\n    })\r\n  })\r\n```\r\n## 原生JS实现AJAX\r\n\r\n```\r\nvar b2 = document.getElementById(\"b2\");\r\n  b2.onclick = function () {\r\n    // 原生JS\r\n    var xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open(\"POST\", \"/ajax_test/\", true);\r\n    xmlHttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n    xmlHttp.send(\"username=lee&password=123456\");\r\n    xmlHttp.onreadystatechange = function () {\r\n      if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {\r\n        alert(xmlHttp.responseText);\r\n      }\r\n    };\r\n  };\r\n```\r\n## AJAX请求如何设置csrf_token\r\n### 方式1: \r\n>通过获取隐藏的input标签中的csrfmiddlewaretoken值，放置在data中发送。\r\n\r\n```\r\n$.ajax({\r\n  url: \"/cookie_ajax/\",\r\n  type: \"POST\",\r\n  data: {\r\n    \"username\": \"Q1mi\",\r\n    \"password\": 123456,\r\n    \"csrfmiddlewaretoken\": $(\"[name = \'csrfmiddlewaretoken\']\").val()  // 使用JQuery取出csrfmiddlewaretoken的值，拼接到data中\r\n  },\r\n  success: function (data) {\r\n    console.log(data);\r\n  }\r\n```\r\n### 方式2：\r\n>通过获取返回的cookie中的字符串 放置在请求头中发送。\r\n\r\n\r\n注意：**需要引入一个jquery.cookie.js插件**。\r\n\r\n```\r\n$.ajax({\r\n  url: \"/cookie_ajax/\",\r\n  type: \"POST\",\r\n  headers: {\"X-CSRFToken\": $.cookie(\'csrftoken\')},  // 从Cookie取csrf_token，并设置ajax请求头\r\n  data: {\"username\": \"Q1mi\", \"password\": 123456},\r\n  success: function (data) {\r\n    console.log(data);\r\n  }\r\n})\r\n```\r\n**或者用自己写一个getCookie方法：**\r\n\r\n```\r\nfunction getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== \'\') {\r\n        var cookies = document.cookie.split(\';\');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = jQuery.trim(cookies[i]);\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + \'=\')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\nvar csrftoken = getCookie(\'csrftoken\');\r\n```\r\n**每一次都这么写太麻烦了，可以使用$.ajaxSetup()方法为ajax请求统一设置。**\r\n\r\n```\r\nfunction csrfSafeMethod(method) {\r\n  // these HTTP methods do not require CSRF protection\r\n  return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));\r\n}\r\n\r\n$.ajaxSetup({\r\n  beforeSend: function (xhr, settings) {\r\n    if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\r\n      xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n    }\r\n  }\r\n});\r\n```\r\n>注意：\r\n&nbsp;\r\n如果使用从cookie中取csrftoken的方式，需要确保cookie存在csrftoken值。如果你的视图渲染的HTML文件中没有包含 ```{% csrf_token %}```，Django可能不会设置CSRFtoken的cookie。\r\n&nbsp;\r\n这个时候需要使用**ensure_csrf_cookie()**装饰器强制设置Cookie。\r\n\r\n```\r\nfrom django.views.decorators.csrf import ensure_csrf_cookie\r\n\r\n@ensure_csrf_cookie\r\ndef login(request):\r\n    pass\r\n```\r\n\r\n更多细节详见：[Djagno官方文档中关于CSRF的内容](https://docs.djangoproject.com/en/1.11/ref/csrf/)\r\n\r\n## AJAX上传文件\r\n\r\n```\r\n// 上传文件示例\r\n$(\"#b3\").click(function () {\r\n  var formData = new FormData();\r\n  formData.append(\"csrfmiddlewaretoken\", $(\"[name=\'csrfmiddlewaretoken\']\").val());\r\n  formData.append(\"f1\", $(\"#f1\")[0].files[0]);\r\n  $.ajax({\r\n    url: \"/upload/\",\r\n    type: \"POST\",\r\n    processData: false,  // 告诉jQuery不要去处理发送的数据\r\n    contentType: false,  // 告诉jQuery不要去设置Content-Type请求头\r\n    data: formData,\r\n    success:function (data) {\r\n      console.log(data)\r\n    }\r\n  })\r\n})\r\n```\r\n#### 情景分析\r\n>在注册表单中，当用户填写了用户名后，把光标移开后，会自动向服务器发送异步请求。服务器返回这个用户名是否已经被注册过。\r\n>\r\n>- 页面中给出注册表单；\r\n- 在username input标签中绑定onblur事件处理函数。\r\n- 当input标签失去焦点后获取 username表单字段的值，向服务端发送AJAX请求；\r\n- django的视图函数中处理该请求，获取username值，判断该用户在数据库中是否被注册，如果被注册了就返回“该用户已被注册”，否则响应“该用户名可以注册”。\r\n\r\n## 序列化\r\n### Django内置的serializers\r\n\r\n```\r\ndef books_json(request):\r\n    book_list = models.Book.objects.all()[0:10]\r\n    from django.core import serializers\r\n    ret = serializers.serialize(\"json\", book_list)\r\n    return HttpResponse(ret)\r\n```\r\n## SweetAlert插件示例\r\n![这里写图片描述](https://img-blog.csdn.net/20180803225831763?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTA1MjU2OTQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70) \r\n点击下载[Bootstrap-sweetalert项目](https://github.com/lipis/bootstrap-sweetalert)。 \r\n\r\n```\r\n$(\".btn-danger\").on(\"click\", function () {\r\n  swal({\r\n    title: \"你确定要删除吗？\",\r\n    text: \"删除可就找不回来了哦！\",\r\n    type: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonClass: \"btn-danger\",\r\n    confirmButtonText: \"删除\",\r\n    cancelButtonText: \"取消\",\r\n    closeOnConfirm: false\r\n    },\r\n    function () {\r\n      var deleteId = $(this).parent().parent().attr(\"data_id\");\r\n      $.ajax({\r\n        url: \"/delete_book/\",\r\n        type: \"post\",\r\n        data: {\"id\": deleteId},\r\n        success: function (data) {\r\n          if (data.status === 1) {\r\n            swal(\"删除成功!\", \"你可以准备跑路了！\", \"success\");\r\n          } else {\r\n            swal(\"删除失败\", \"你可以再尝试一下！\", \"error\")\r\n          }\r\n        }\r\n      })\r\n    });\r\n})\r\n```',5),(6,'# Editor.md\r\n\r\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\r\n\r\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\r\n\r\n**目录 (Table of Contents)**\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n# Heading 1\r\n## Heading 2               \r\n### Heading 3\r\n#### Heading 4\r\n##### Heading 5\r\n###### Heading 6\r\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \"Heading link\") Heading link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n\r\n#### 标题（用底线的形式）Heading (underline)\r\n\r\nThis is an H1\r\n=============\r\n\r\nThis is an H2\r\n-------------\r\n\r\n### 字符效果和横线等\r\n                \r\n----\r\n\r\n~~删除线~~ <s>删除线（开启识别HTML标签时）</s>\r\n*斜体字*      _斜体字_\r\n**粗体**  __粗体__\r\n***粗斜体*** ___粗斜体___\r\n\r\n上标：X<sub>2</sub>，下标：O<sup>2</sup>\r\n\r\n**缩写(同HTML的abbr标签)**\r\n\r\n> 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启\r\n\r\nThe <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.\r\n\r\n### 引用 Blockquotes\r\n\r\n> 引用文本 Blockquotes\r\n\r\n引用的行内混合 Blockquotes\r\n                    \r\n> 引用：如果想要插入空白换行`即<br />标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](http://localhost/)。\r\n\r\n### 锚点与链接 Links\r\n\r\n[普通链接](http://localhost/)\r\n\r\n[普通链接带标题](http://localhost/ \"普通链接带标题\")\r\n\r\n直接链接：<https://github.com>\r\n\r\n[锚点链接][anchor-id] \r\n\r\n[anchor-id]: http://www.this-anchor-link.com/\r\n\r\n[mailto:test.test@gmail.com](mailto:test.test@gmail.com)\r\n\r\nGFM a-tail link @pandao  邮箱地址自动链接 test.test@gmail.com  www@vip.qq.com\r\n\r\n> @pandao\r\n\r\n### 多语言代码高亮 Codes\r\n\r\n#### 行内代码 Inline code\r\n\r\n执行命令：`npm install marked`\r\n\r\n#### 缩进风格\r\n\r\n即缩进四个空格，也做为实现类似 `<pre>` 预格式化文本 ( Preformatted Text ) 的功能。\r\n\r\n    <?php\r\n        echo \"Hello world!\";\r\n    ?>\r\n    \r\n预格式化文本：\r\n\r\n    | First Header  | Second Header |\r\n    | ------------- | ------------- |\r\n    | Content Cell  | Content Cell  |\r\n    | Content Cell  | Content Cell  |\r\n\r\n#### JS代码　\r\n\r\n```javascript\r\nfunction test() {\r\n	console.log(\"Hello world!\");\r\n}\r\n \r\n(function(){\r\n    var box = function() {\r\n        return box.fn.init();\r\n    };\r\n\r\n    box.prototype = box.fn = {\r\n        init : function(){\r\n            console.log(\'box.init()\');\r\n\r\n			return this;\r\n        },\r\n\r\n		add : function(str) {\r\n			alert(\"add\", str);\r\n\r\n			return this;\r\n		},\r\n\r\n		remove : function(str) {\r\n			alert(\"remove\", str);\r\n\r\n			return this;\r\n		}\r\n    };\r\n    \r\n    box.fn.init.prototype = box.fn;\r\n    \r\n    window.box =box;\r\n})();\r\n\r\nvar testBox = box();\r\ntestBox.add(\"jQuery\").remove(\"jQuery\");\r\n```\r\n\r\n#### HTML 代码 HTML codes\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <mate charest=\"utf-8\" />\r\n        <meta name=\"keywords\" content=\"Editor.md, Markdown, Editor\" />\r\n        <title>Hello world!</title>\r\n        <style type=\"text/css\">\r\n            body{font-size:14px;color:#444;font-family: \"Microsoft Yahei\", Tahoma, \"Hiragino Sans GB\", Arial;background:#fff;}\r\n            ul{list-style: none;}\r\n            img{border:none;vertical-align: middle;}\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <h1 class=\"text-xxl\">Hello world!</h1>\r\n        <p class=\"text-green\">Plain text</p>\r\n    </body>\r\n</html>\r\n```\r\n\r\n### 图片 Images\r\n\r\nImage:\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\r\n\r\n> Follow your heart.\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\r\n\r\n> 图为：厦门白城沙滩\r\n\r\n图片加链接 (Image + Link)：\r\n\r\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/images/7.jpg \"李健首张专辑《似水流年》封面\")\r\n\r\n> 图为：李健首张专辑《似水流年》封面\r\n                \r\n----\r\n\r\n### 列表 Lists\r\n\r\n#### 无序列表（减号）Unordered Lists (-)\r\n                \r\n- 列表一\r\n- 列表二\r\n- 列表三\r\n     \r\n#### 无序列表（星号）Unordered Lists (*)\r\n\r\n* 列表一\r\n* 列表二\r\n* 列表三\r\n\r\n#### 无序列表（加号和嵌套）Unordered Lists (+)\r\n                \r\n+ 列表一\r\n+ 列表二\r\n    + 列表二-1\r\n    + 列表二-2\r\n    + 列表二-3\r\n+ 列表三\r\n    * 列表一\r\n    * 列表二\r\n    * 列表三\r\n\r\n#### 有序列表 Ordered Lists (-)\r\n                \r\n1. 第一行\r\n2. 第二行\r\n3. 第三行\r\n\r\n#### GFM task list\r\n\r\n- [x] GFM task list 1\r\n- [x] GFM task list 2\r\n- [ ] GFM task list 3\r\n    - [ ] GFM task list 3-1\r\n    - [ ] GFM task list 3-2\r\n    - [ ] GFM task list 3-3\r\n- [ ] GFM task list 4\r\n    - [ ] GFM task list 4-1\r\n    - [ ] GFM task list 4-2\r\n                \r\n----\r\n                    \r\n### 绘制表格 Tables\r\n\r\n| 项目        | 价格   |  数量  |\r\n| --------   | -----:  | :----:  |\r\n| 计算机      | $1600   |   5     |\r\n| 手机        |   $12   |   12   |\r\n| 管线        |    $1    |  234  |\r\n                    \r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell \r\n\r\n| First Header  | Second Header |\r\n| ------------- | ------------- |\r\n| Content Cell  | Content Cell  |\r\n| Content Cell  | Content Cell  |\r\n\r\n| Function name | Description                    |\r\n| ------------- | ------------------------------ |\r\n| `help()`      | Display the help window.       |\r\n| `destroy()`   | **Destroy your computer!**     |\r\n\r\n| Left-Aligned  | Center Aligned  | Right Aligned |\r\n| :------------ |:---------------:| -----:|\r\n| col 3 is      | some wordy text | $1600 |\r\n| col 2 is      | centered        |   $12 |\r\n| zebra stripes | are neat        |    $1 |\r\n\r\n| Item      | Value |\r\n| --------- | -----:|\r\n| Computer  | $1600 |\r\n| Phone     |   $12 |\r\n| Pipe      |    $1 |\r\n                \r\n----\r\n\r\n#### 特殊符号 HTML Entities Codes\r\n\r\n&copy; &  &uml; &trade; &iexcl; &pound;\r\n&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; \r\n\r\nX&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;\r\n\r\n18&ordm;C  &quot;  &apos;\r\n\r\n[========]\r\n\r\n### Emoji表情 :smiley:\r\n\r\n> Blockquotes :star:\r\n\r\n#### GFM task lists & Emoji & fontAwesome icon emoji & editormd logo emoji :editormd-logo-5x:\r\n\r\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <del>tags</del> supported :editormd-logo:;\r\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\r\n- [x] [ ] :smiley: this is a complete item :smiley:;\r\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao; \r\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\r\n \r\n#### 反斜杠 Escape\r\n\r\n\\*literal asterisks\\*\r\n\r\n[========]\r\n            \r\n### 科学公式 TeX(KaTeX)\r\n\r\n$$E=mc^2$$\r\n\r\n行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。\r\n\r\n$$x > y$$\r\n\r\n$$\\(\\sqrt{3x-1}+(1+x)^2\\)$$\r\n                    \r\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$\r\n\r\n多行公式：\r\n\r\n```math\r\n\\displaystyle\r\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\r\n\\leq\r\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\r\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\r\n```\r\n\r\n```katex\r\n\\displaystyle \r\n    \\frac{1}{\r\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\r\n        \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {\r\n        1+\\frac{e^{-6\\pi}}\r\n        {1+\\frac{e^{-8\\pi}}\r\n         {1+\\cdots} }\r\n        } \r\n    }\r\n```\r\n\r\n```latex\r\nf(x) = \\int_{-\\infty}^\\infty\r\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n    \\,d\\xi\r\n```\r\n\r\n### 分页符 Page break\r\n\r\n> Print Test: Ctrl + P\r\n\r\n[========]\r\n\r\n### 绘制流程图 Flowchart\r\n\r\n```flow\r\nst=>start: 用户登陆\r\nop=>operation: 登陆操作\r\ncond=>condition: 登陆成功 Yes or No?\r\ne=>end: 进入后台\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n```\r\n\r\n[========]\r\n                    \r\n### 绘制序列图 Sequence Diagram\r\n                    \r\n```seq\r\nAndrew->China: Says Hello \r\nNote right of China: China thinks\\nabout it \r\nChina-->Andrew: How are you? \r\nAndrew->>China: I am good thanks!\r\n```\r\n\r\n### End',6),(7,'### 主要特性\r\n\r\n- 支持“标准”Markdown / CommonMark和Github风格的语法，也可变身为代码编辑器；\r\n- 支持实时预览、图片（跨域）上传、预格式文本/代码/表格插入、代码折叠、搜索替换、只读模式、自定义样式主题和多语言语法高亮等功能；\r\n- 支持ToC（Table of Contents）、Emoji表情、Task lists、@链接等Markdown扩展语法；\r\n- 支持TeX科学公式（基于KaTeX）、流程图 Flowchart 和 时序图 Sequence Diagram;\r\n- 支持识别和解析HTML标签，并且支持自定义过滤标签解析，具有可靠的安全性和几乎无限的扩展性；\r\n- 支持 AMD / CMD 模块化加载（支持 Require.js & Sea.js），并且支持自定义扩展插件；\r\n- 兼容主流的浏览器（IE8+）和Zepto.js，且支持iPad等平板设备；\r\n- 支持自定义主题样式；\r\n\r\n# Editor.md\r\n\r\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\r\n\r\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\r\n\r\n**目录 (Table of Contents)**\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n# Heading 1\r\n## Heading 2\r\n### Heading 3\r\n#### Heading 4\r\n##### Heading 5\r\n###### Heading 6\r\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \"Heading link\") Heading link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n\r\n#### 标题（用底线的形式）Heading (underline)\r\n\r\nThis is an H1\r\n=============\r\n\r\nThis is an H2\r\n-------------\r\n\r\n### 字符效果和横线等\r\n                \r\n----\r\n\r\n~~删除线~~ <s>删除线（开启识别HTML标签时）</s>\r\n*斜体字*      _斜体字_\r\n**粗体**  __粗体__\r\n***粗斜体*** ___粗斜体___\r\n\r\n上标：X<sub>2</sub>，下标：O<sup>2</sup>\r\n\r\n**缩写(同HTML的abbr标签)**\r\n\r\n> 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启\r\n\r\nThe <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.\r\n\r\n### 引用 Blockquotes\r\n\r\n> 引用文本 Blockquotes\r\n\r\n引用的行内混合 Blockquotes\r\n                    \r\n> 引用：如果想要插入空白换行`即<br />标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](http://localhost/)。\r\n\r\n### 锚点与链接 Links\r\n\r\n[普通链接](http://localhost/)\r\n\r\n[普通链接带标题](http://localhost/ \"普通链接带标题\")\r\n\r\n直接链接：<https://github.com>\r\n\r\n[锚点链接][anchor-id] \r\n\r\n[anchor-id]: http://www.this-anchor-link.com/\r\n\r\nGFM a-tail link @pandao\r\n\r\n> @pandao\r\n\r\n### 多语言代码高亮 Codes\r\n\r\n#### 行内代码 Inline code\r\n\r\n执行命令：`npm install marked`\r\n\r\n#### 缩进风格\r\n\r\n即缩进四个空格，也做为实现类似`<pre>`预格式化文本(Preformatted Text)的功能。\r\n\r\n    <?php\r\n        echo \"Hello world!\";\r\n    ?>\r\n    \r\n预格式化文本：\r\n\r\n    | First Header  | Second Header |\r\n    | ------------- | ------------- |\r\n    | Content Cell  | Content Cell  |\r\n    | Content Cell  | Content Cell  |\r\n\r\n#### JS代码　\r\n\r\n```javascript\r\nfunction test(){\r\n	console.log(\"Hello world!\");\r\n}\r\n \r\n(function(){\r\n    var box = function(){\r\n        return box.fn.init();\r\n    };\r\n\r\n    box.prototype = box.fn = {\r\n        init : function(){\r\n            console.log(\'box.init()\');\r\n\r\n			return this;\r\n        },\r\n\r\n		add : function(str){\r\n			alert(\"add\", str);\r\n\r\n			return this;\r\n		},\r\n\r\n		remove : function(str){\r\n			alert(\"remove\", str);\r\n\r\n			return this;\r\n		}\r\n    };\r\n    \r\n    box.fn.init.prototype = box.fn;\r\n    \r\n    window.box =box;\r\n})();\r\n\r\nvar testBox = box();\r\ntestBox.add(\"jQuery\").remove(\"jQuery\");\r\n```\r\n\r\n#### HTML代码 HTML codes\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <mate charest=\"utf-8\" />\r\n        <title>Hello world!</title>\r\n    </head>\r\n    <body>\r\n        <h1>Hello world!</h1>\r\n    </body>\r\n</html>\r\n```\r\n\r\n### 图片 Images\r\n\r\nImage:\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\r\n\r\n> Follow your heart.\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\r\n\r\n> 图为：厦门白城沙滩\r\n\r\n图片加链接 (Image + Link)：\r\n\r\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/examples/images/7.jpg \"李健首张专辑《似水流年》封面\")\r\n\r\n> 图为：李健首张专辑《似水流年》封面\r\n                \r\n----\r\n\r\n### 列表 Lists\r\n\r\n#### 无序列表（减号）Unordered Lists (-)\r\n                \r\n- 列表一\r\n- 列表二\r\n- 列表三\r\n     \r\n#### 无序列表（星号）Unordered Lists (*)\r\n\r\n* 列表一\r\n* 列表二\r\n* 列表三\r\n\r\n#### 无序列表（加号和嵌套）Unordered Lists (+)\r\n                \r\n+ 列表一\r\n+ 列表二\r\n    + 列表二-1\r\n    + 列表二-2\r\n    + 列表二-3\r\n+ 列表三\r\n    * 列表一\r\n    * 列表二\r\n    * 列表三\r\n\r\n#### 有序列表 Ordered Lists (-)\r\n                \r\n1. 第一行\r\n2. 第二行\r\n3. 第三行\r\n\r\n#### GFM task list\r\n\r\n- [x] GFM task list 1\r\n- [x] GFM task list 2\r\n- [ ] GFM task list 3\r\n    - [ ] GFM task list 3-1\r\n    - [ ] GFM task list 3-2\r\n    - [ ] GFM task list 3-3\r\n- [ ] GFM task list 4\r\n    - [ ] GFM task list 4-1\r\n    - [ ] GFM task list 4-2\r\n                \r\n----\r\n                    \r\n### 绘制表格 Tables\r\n\r\n| 项目        | 价格   |  数量  |\r\n| --------   | -----:  | :----:  |\r\n| 计算机      | $1600   |   5     |\r\n| 手机        |   $12   |   12   |\r\n| 管线        |    $1    |  234  |\r\n                    \r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell \r\n\r\n| First Header  | Second Header |\r\n| ------------- | ------------- |\r\n| Content Cell  | Content Cell  |\r\n| Content Cell  | Content Cell  |\r\n\r\n| Function name | Description                    |\r\n| ------------- | ------------------------------ |\r\n| `help()`      | Display the help window.       |\r\n| `destroy()`   | **Destroy your computer!**     |\r\n\r\n| Left-Aligned  | Center Aligned  | Right Aligned |\r\n| :------------ |:---------------:| -----:|\r\n| col 3 is      | some wordy text | $1600 |\r\n| col 2 is      | centered        |   $12 |\r\n| zebra stripes | are neat        |    $1 |\r\n\r\n| Item      | Value |\r\n| --------- | -----:|\r\n| Computer  | $1600 |\r\n| Phone     |   $12 |\r\n| Pipe      |    $1 |\r\n                \r\n----\r\n\r\n#### 特殊符号 HTML Entities Codes\r\n\r\n&copy; &  &uml; &trade; &iexcl; &pound;\r\n&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; \r\n\r\nX&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;\r\n\r\n18&ordm;C  &quot;  &apos;\r\n\r\n### Emoji表情 :smiley:\r\n\r\n> Blockquotes :star:\r\n\r\n#### GFM task lists & Emoji & fontAwesome icon emoji & editormd logo emoji :editormd-logo-5x:\r\n\r\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <del>tags</del> supported :editormd-logo:;\r\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\r\n- [x] [ ] :smiley: this is a complete item :smiley:;\r\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao; \r\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\r\n \r\n#### 反斜杠 Escape\r\n\r\n\\*literal asterisks\\*\r\n            \r\n### 科学公式 TeX(KaTeX)\r\n                    \r\n$$E=mc^2$$\r\n\r\n行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。\r\n\r\n$$\\(\\sqrt{3x-1}+(1+x)^2\\)$$\r\n                    \r\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$\r\n\r\n多行公式：\r\n\r\n```math\r\n\\displaystyle\r\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\r\n\\leq\r\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\r\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\r\n```\r\n\r\n```katex\r\n\\displaystyle \r\n    \\frac{1}{\r\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\r\n        \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {\r\n        1+\\frac{e^{-6\\pi}}\r\n        {1+\\frac{e^{-8\\pi}}\r\n         {1+\\cdots} }\r\n        } \r\n    }\r\n```\r\n\r\n```latex\r\nf(x) = \\int_{-\\infty}^\\infty\r\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n    \\,d\\xi\r\n```\r\n                \r\n### 绘制流程图 Flowchart\r\n\r\n```flow\r\nst=>start: 用户登陆\r\nop=>operation: 登陆操作\r\ncond=>condition: 登陆成功 Yes or No?\r\ne=>end: 进入后台\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n```\r\n                    \r\n### 绘制序列图 Sequence Diagram\r\n                    \r\n```seq\r\nAndrew->China: Says Hello \r\nNote right of China: China thinks\\nabout it \r\nChina-->Andrew: How are you? \r\nAndrew->>China: I am good thanks!\r\n```\r\n\r\n### End',7),(8,'### 主要特性\r\n\r\n- 支持“标准”Markdown / CommonMark和Github风格的语法，也可变身为代码编辑器；\r\n- 支持实时预览、图片（跨域）上传、预格式文本/代码/表格插入、代码折叠、搜索替换、只读模式、自定义样式主题和多语言语法高亮等功能；\r\n- 支持ToC（Table of Contents）、Emoji表情、Task lists、@链接等Markdown扩展语法；\r\n- 支持TeX科学公式（基于KaTeX）、流程图 Flowchart 和 时序图 Sequence Diagram;\r\n- 支持识别和解析HTML标签，并且支持自定义过滤标签解析，具有可靠的安全性和几乎无限的扩展性；\r\n- 支持 AMD / CMD 模块化加载（支持 Require.js & Sea.js），并且支持自定义扩展插件；\r\n- 兼容主流的浏览器（IE8+）和Zepto.js，且支持iPad等平板设备；\r\n- 支持自定义主题样式；\r\n\r\n# Editor.md\r\n\r\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\r\n\r\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\r\n\r\n**目录 (Table of Contents)**\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n# Heading 1\r\n## Heading 2\r\n### Heading 3\r\n#### Heading 4\r\n##### Heading 5\r\n###### Heading 6\r\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \"Heading link\") Heading link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n\r\n#### 标题（用底线的形式）Heading (underline)\r\n\r\nThis is an H1\r\n=============\r\n\r\nThis is an H2\r\n-------------\r\n\r\n### 字符效果和横线等\r\n                \r\n----\r\n\r\n~~删除线~~ <s>删除线（开启识别HTML标签时）</s>\r\n*斜体字*      _斜体字_\r\n**粗体**  __粗体__\r\n***粗斜体*** ___粗斜体___\r\n\r\n上标：X<sub>2</sub>，下标：O<sup>2</sup>\r\n\r\n**缩写(同HTML的abbr标签)**\r\n\r\n> 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启\r\n\r\nThe <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.\r\n\r\n### 引用 Blockquotes\r\n\r\n> 引用文本 Blockquotes\r\n\r\n引用的行内混合 Blockquotes\r\n                    \r\n> 引用：如果想要插入空白换行`即<br />标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](http://localhost/)。\r\n\r\n### 锚点与链接 Links\r\n\r\n[普通链接](http://localhost/)\r\n\r\n[普通链接带标题](http://localhost/ \"普通链接带标题\")\r\n\r\n直接链接：<https://github.com>\r\n\r\n[锚点链接][anchor-id] \r\n\r\n[anchor-id]: http://www.this-anchor-link.com/\r\n\r\nGFM a-tail link @pandao\r\n\r\n> @pandao\r\n\r\n### 多语言代码高亮 Codes\r\n\r\n#### 行内代码 Inline code\r\n\r\n执行命令：`npm install marked`\r\n\r\n#### 缩进风格\r\n\r\n即缩进四个空格，也做为实现类似`<pre>`预格式化文本(Preformatted Text)的功能。\r\n\r\n    <?php\r\n        echo \"Hello world!\";\r\n    ?>\r\n    \r\n预格式化文本：\r\n\r\n    | First Header  | Second Header |\r\n    | ------------- | ------------- |\r\n    | Content Cell  | Content Cell  |\r\n    | Content Cell  | Content Cell  |\r\n\r\n#### JS代码　\r\n\r\n```javascript\r\nfunction test(){\r\n	console.log(\"Hello world!\");\r\n}\r\n \r\n(function(){\r\n    var box = function(){\r\n        return box.fn.init();\r\n    };\r\n\r\n    box.prototype = box.fn = {\r\n        init : function(){\r\n            console.log(\'box.init()\');\r\n\r\n			return this;\r\n        },\r\n\r\n		add : function(str){\r\n			alert(\"add\", str);\r\n\r\n			return this;\r\n		},\r\n\r\n		remove : function(str){\r\n			alert(\"remove\", str);\r\n\r\n			return this;\r\n		}\r\n    };\r\n    \r\n    box.fn.init.prototype = box.fn;\r\n    \r\n    window.box =box;\r\n})();\r\n\r\nvar testBox = box();\r\ntestBox.add(\"jQuery\").remove(\"jQuery\");\r\n```\r\n\r\n#### HTML代码 HTML codes\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <mate charest=\"utf-8\" />\r\n        <title>Hello world!</title>\r\n    </head>\r\n    <body>\r\n        <h1>Hello world!</h1>\r\n    </body>\r\n</html>\r\n```\r\n\r\n### 图片 Images\r\n\r\nImage:\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\r\n\r\n> Follow your heart.\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\r\n\r\n> 图为：厦门白城沙滩\r\n\r\n图片加链接 (Image + Link)：\r\n\r\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/examples/images/7.jpg \"李健首张专辑《似水流年》封面\")\r\n\r\n> 图为：李健首张专辑《似水流年》封面\r\n                \r\n----\r\n\r\n### 列表 Lists\r\n\r\n#### 无序列表（减号）Unordered Lists (-)\r\n                \r\n- 列表一\r\n- 列表二\r\n- 列表三\r\n     \r\n#### 无序列表（星号）Unordered Lists (*)\r\n\r\n* 列表一\r\n* 列表二\r\n* 列表三\r\n\r\n#### 无序列表（加号和嵌套）Unordered Lists (+)\r\n                \r\n+ 列表一\r\n+ 列表二\r\n    + 列表二-1\r\n    + 列表二-2\r\n    + 列表二-3\r\n+ 列表三\r\n    * 列表一\r\n    * 列表二\r\n    * 列表三\r\n\r\n#### 有序列表 Ordered Lists (-)\r\n                \r\n1. 第一行\r\n2. 第二行\r\n3. 第三行\r\n\r\n#### GFM task list\r\n\r\n- [x] GFM task list 1\r\n- [x] GFM task list 2\r\n- [ ] GFM task list 3\r\n    - [ ] GFM task list 3-1\r\n    - [ ] GFM task list 3-2\r\n    - [ ] GFM task list 3-3\r\n- [ ] GFM task list 4\r\n    - [ ] GFM task list 4-1\r\n    - [ ] GFM task list 4-2\r\n                \r\n----\r\n                    \r\n### 绘制表格 Tables\r\n\r\n| 项目        | 价格   |  数量  |\r\n| --------   | -----:  | :----:  |\r\n| 计算机      | $1600   |   5     |\r\n| 手机        |   $12   |   12   |\r\n| 管线        |    $1    |  234  |\r\n                    \r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell \r\n\r\n| First Header  | Second Header |\r\n| ------------- | ------------- |\r\n| Content Cell  | Content Cell  |\r\n| Content Cell  | Content Cell  |\r\n\r\n| Function name | Description                    |\r\n| ------------- | ------------------------------ |\r\n| `help()`      | Display the help window.       |\r\n| `destroy()`   | **Destroy your computer!**     |\r\n\r\n| Left-Aligned  | Center Aligned  | Right Aligned |\r\n| :------------ |:---------------:| -----:|\r\n| col 3 is      | some wordy text | $1600 |\r\n| col 2 is      | centered        |   $12 |\r\n| zebra stripes | are neat        |    $1 |\r\n\r\n| Item      | Value |\r\n| --------- | -----:|\r\n| Computer  | $1600 |\r\n| Phone     |   $12 |\r\n| Pipe      |    $1 |\r\n                \r\n----\r\n\r\n#### 特殊符号 HTML Entities Codes\r\n\r\n&copy; &  &uml; &trade; &iexcl; &pound;\r\n&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; \r\n\r\nX&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;\r\n\r\n18&ordm;C  &quot;  &apos;\r\n\r\n### Emoji表情 :smiley:\r\n\r\n> Blockquotes :star:\r\n\r\n#### GFM task lists & Emoji & fontAwesome icon emoji & editormd logo emoji :editormd-logo-5x:\r\n\r\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <del>tags</del> supported :editormd-logo:;\r\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\r\n- [x] [ ] :smiley: this is a complete item :smiley:;\r\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao; \r\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\r\n \r\n#### 反斜杠 Escape\r\n\r\n\\*literal asterisks\\*\r\n            \r\n### 科学公式 TeX(KaTeX)\r\n                    \r\n$$E=mc^2$$\r\n\r\n行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。\r\n\r\n$$\\(\\sqrt{3x-1}+(1+x)^2\\)$$\r\n                    \r\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$\r\n\r\n多行公式：\r\n\r\n```math\r\n\\displaystyle\r\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\r\n\\leq\r\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\r\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\r\n```\r\n\r\n```katex\r\n\\displaystyle \r\n    \\frac{1}{\r\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\r\n        \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {\r\n        1+\\frac{e^{-6\\pi}}\r\n        {1+\\frac{e^{-8\\pi}}\r\n         {1+\\cdots} }\r\n        } \r\n    }\r\n```\r\n\r\n```latex\r\nf(x) = \\int_{-\\infty}^\\infty\r\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n    \\,d\\xi\r\n```\r\n                \r\n### 绘制流程图 Flowchart\r\n\r\n```flow\r\nst=>start: 用户登陆\r\nop=>operation: 登陆操作\r\ncond=>condition: 登陆成功 Yes or No?\r\ne=>end: 进入后台\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n```\r\n                    \r\n### 绘制序列图 Sequence Diagram\r\n                    \r\n```seq\r\nAndrew->China: Says Hello \r\nNote right of China: China thinks\\nabout it \r\nChina-->Andrew: How are you? \r\nAndrew->>China: I am good thanks!\r\n```\r\n\r\n### End',8),(9,'### 主要特性\r\n\r\n- 支持“标准”Markdown / CommonMark和Github风格的语法，也可变身为代码编辑器；\r\n- 支持实时预览、图片（跨域）上传、预格式文本/代码/表格插入、代码折叠、搜索替换、只读模式、自定义样式主题和多语言语法高亮等功能；\r\n- 支持ToC（Table of Contents）、Emoji表情、Task lists、@链接等Markdown扩展语法；\r\n- 支持TeX科学公式（基于KaTeX）、流程图 Flowchart 和 时序图 Sequence Diagram;\r\n- 支持识别和解析HTML标签，并且支持自定义过滤标签解析，具有可靠的安全性和几乎无限的扩展性；\r\n- 支持 AMD / CMD 模块化加载（支持 Require.js & Sea.js），并且支持自定义扩展插件；\r\n- 兼容主流的浏览器（IE8+）和Zepto.js，且支持iPad等平板设备；\r\n- 支持自定义主题样式；\r\n\r\n# Editor.md\r\n\r\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\r\n\r\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\r\n\r\n**目录 (Table of Contents)**\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n# Heading 1\r\n## Heading 2\r\n### Heading 3\r\n#### Heading 4\r\n##### Heading 5\r\n###### Heading 6\r\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \"Heading link\") Heading link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n\r\n#### 标题（用底线的形式）Heading (underline)\r\n\r\nThis is an H1\r\n=============\r\n\r\nThis is an H2\r\n-------------\r\n\r\n### 字符效果和横线等\r\n                \r\n----\r\n\r\n~~删除线~~ <s>删除线（开启识别HTML标签时）</s>\r\n*斜体字*      _斜体字_\r\n**粗体**  __粗体__\r\n***粗斜体*** ___粗斜体___\r\n\r\n上标：X<sub>2</sub>，下标：O<sup>2</sup>\r\n\r\n**缩写(同HTML的abbr标签)**\r\n\r\n> 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启\r\n\r\nThe <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.\r\n\r\n### 引用 Blockquotes\r\n\r\n> 引用文本 Blockquotes\r\n\r\n引用的行内混合 Blockquotes\r\n                    \r\n> 引用：如果想要插入空白换行`即<br />标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](http://localhost/)。\r\n\r\n### 锚点与链接 Links\r\n\r\n[普通链接](http://localhost/)\r\n\r\n[普通链接带标题](http://localhost/ \"普通链接带标题\")\r\n\r\n直接链接：<https://github.com>\r\n\r\n[锚点链接][anchor-id] \r\n\r\n[anchor-id]: http://www.this-anchor-link.com/\r\n\r\nGFM a-tail link @pandao\r\n\r\n> @pandao\r\n\r\n### 多语言代码高亮 Codes\r\n\r\n#### 行内代码 Inline code\r\n\r\n执行命令：`npm install marked`\r\n\r\n#### 缩进风格\r\n\r\n即缩进四个空格，也做为实现类似`<pre>`预格式化文本(Preformatted Text)的功能。\r\n\r\n    <?php\r\n        echo \"Hello world!\";\r\n    ?>\r\n    \r\n预格式化文本：\r\n\r\n    | First Header  | Second Header |\r\n    | ------------- | ------------- |\r\n    | Content Cell  | Content Cell  |\r\n    | Content Cell  | Content Cell  |\r\n\r\n#### JS代码　\r\n\r\n```javascript\r\nfunction test(){\r\n	console.log(\"Hello world!\");\r\n}\r\n \r\n(function(){\r\n    var box = function(){\r\n        return box.fn.init();\r\n    };\r\n\r\n    box.prototype = box.fn = {\r\n        init : function(){\r\n            console.log(\'box.init()\');\r\n\r\n			return this;\r\n        },\r\n\r\n		add : function(str){\r\n			alert(\"add\", str);\r\n\r\n			return this;\r\n		},\r\n\r\n		remove : function(str){\r\n			alert(\"remove\", str);\r\n\r\n			return this;\r\n		}\r\n    };\r\n    \r\n    box.fn.init.prototype = box.fn;\r\n    \r\n    window.box =box;\r\n})();\r\n\r\nvar testBox = box();\r\ntestBox.add(\"jQuery\").remove(\"jQuery\");\r\n```\r\n\r\n#### HTML代码 HTML codes\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <mate charest=\"utf-8\" />\r\n        <title>Hello world!</title>\r\n    </head>\r\n    <body>\r\n        <h1>Hello world!</h1>\r\n    </body>\r\n</html>\r\n```\r\n\r\n### 图片 Images\r\n\r\nImage:\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\r\n\r\n> Follow your heart.\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\r\n\r\n> 图为：厦门白城沙滩\r\n\r\n图片加链接 (Image + Link)：\r\n\r\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/examples/images/7.jpg \"李健首张专辑《似水流年》封面\")\r\n\r\n> 图为：李健首张专辑《似水流年》封面\r\n                \r\n----\r\n\r\n### 列表 Lists\r\n\r\n#### 无序列表（减号）Unordered Lists (-)\r\n                \r\n- 列表一\r\n- 列表二\r\n- 列表三\r\n     \r\n#### 无序列表（星号）Unordered Lists (*)\r\n\r\n* 列表一\r\n* 列表二\r\n* 列表三\r\n\r\n#### 无序列表（加号和嵌套）Unordered Lists (+)\r\n                \r\n+ 列表一\r\n+ 列表二\r\n    + 列表二-1\r\n    + 列表二-2\r\n    + 列表二-3\r\n+ 列表三\r\n    * 列表一\r\n    * 列表二\r\n    * 列表三\r\n\r\n#### 有序列表 Ordered Lists (-)\r\n                \r\n1. 第一行\r\n2. 第二行\r\n3. 第三行\r\n\r\n#### GFM task list\r\n\r\n- [x] GFM task list 1\r\n- [x] GFM task list 2\r\n- [ ] GFM task list 3\r\n    - [ ] GFM task list 3-1\r\n    - [ ] GFM task list 3-2\r\n    - [ ] GFM task list 3-3\r\n- [ ] GFM task list 4\r\n    - [ ] GFM task list 4-1\r\n    - [ ] GFM task list 4-2\r\n                \r\n----\r\n                    \r\n### 绘制表格 Tables\r\n\r\n| 项目        | 价格   |  数量  |\r\n| --------   | -----:  | :----:  |\r\n| 计算机      | $1600   |   5     |\r\n| 手机        |   $12   |   12   |\r\n| 管线        |    $1    |  234  |\r\n                    \r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell \r\n\r\n| First Header  | Second Header |\r\n| ------------- | ------------- |\r\n| Content Cell  | Content Cell  |\r\n| Content Cell  | Content Cell  |\r\n\r\n| Function name | Description                    |\r\n| ------------- | ------------------------------ |\r\n| `help()`      | Display the help window.       |\r\n| `destroy()`   | **Destroy your computer!**     |\r\n\r\n| Left-Aligned  | Center Aligned  | Right Aligned |\r\n| :------------ |:---------------:| -----:|\r\n| col 3 is      | some wordy text | $1600 |\r\n| col 2 is      | centered        |   $12 |\r\n| zebra stripes | are neat        |    $1 |\r\n\r\n| Item      | Value |\r\n| --------- | -----:|\r\n| Computer  | $1600 |\r\n| Phone     |   $12 |\r\n| Pipe      |    $1 |\r\n                \r\n----\r\n\r\n#### 特殊符号 HTML Entities Codes\r\n\r\n&copy; &  &uml; &trade; &iexcl; &pound;\r\n&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; \r\n\r\nX&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;\r\n\r\n18&ordm;C  &quot;  &apos;\r\n\r\n### Emoji表情 :smiley:\r\n\r\n> Blockquotes :star:\r\n\r\n#### GFM task lists & Emoji & fontAwesome icon emoji & editormd logo emoji :editormd-logo-5x:\r\n\r\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <del>tags</del> supported :editormd-logo:;\r\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\r\n- [x] [ ] :smiley: this is a complete item :smiley:;\r\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao; \r\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\r\n \r\n#### 反斜杠 Escape\r\n\r\n\\*literal asterisks\\*\r\n            \r\n### 科学公式 TeX(KaTeX)\r\n                    \r\n$$E=mc^2$$\r\n\r\n行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。\r\n\r\n$$\\(\\sqrt{3x-1}+(1+x)^2\\)$$\r\n                    \r\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$\r\n\r\n多行公式：\r\n\r\n```math\r\n\\displaystyle\r\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\r\n\\leq\r\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\r\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\r\n```\r\n\r\n```katex\r\n\\displaystyle \r\n    \\frac{1}{\r\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\r\n        \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {\r\n        1+\\frac{e^{-6\\pi}}\r\n        {1+\\frac{e^{-8\\pi}}\r\n         {1+\\cdots} }\r\n        } \r\n    }\r\n```\r\n\r\n```latex\r\nf(x) = \\int_{-\\infty}^\\infty\r\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n    \\,d\\xi\r\n```\r\n                \r\n### 绘制流程图 Flowchart\r\n\r\n```flow\r\nst=>start: 用户登陆\r\nop=>operation: 登陆操作\r\ncond=>condition: 登陆成功 Yes or No?\r\ne=>end: 进入后台\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n```\r\n                    \r\n### 绘制序列图 Sequence Diagram\r\n                    \r\n```seq\r\nAndrew->China: Says Hello \r\nNote right of China: China thinks\\nabout it \r\nChina-->Andrew: How are you? \r\nAndrew->>China: I am good thanks!\r\n```\r\n\r\n### End',9),(10,'### 主要特性\r\n\r\n- 支持“标准”Markdown / CommonMark和Github风格的语法，也可变身为代码编辑器；\r\n- 支持实时预览、图片（跨域）上传、预格式文本/代码/表格插入、代码折叠、搜索替换、只读模式、自定义样式主题和多语言语法高亮等功能；\r\n- 支持ToC（Table of Contents）、Emoji表情、Task lists、@链接等Markdown扩展语法；\r\n- 支持TeX科学公式（基于KaTeX）、流程图 Flowchart 和 时序图 Sequence Diagram;\r\n- 支持识别和解析HTML标签，并且支持自定义过滤标签解析，具有可靠的安全性和几乎无限的扩展性；\r\n- 支持 AMD / CMD 模块化加载（支持 Require.js & Sea.js），并且支持自定义扩展插件；\r\n- 兼容主流的浏览器（IE8+）和Zepto.js，且支持iPad等平板设备；\r\n- 支持自定义主题样式；\r\n\r\n# Editor.md\r\n\r\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\r\n\r\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\r\n\r\n**目录 (Table of Contents)**\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n# Heading 1\r\n## Heading 2\r\n### Heading 3\r\n#### Heading 4\r\n##### Heading 5\r\n###### Heading 6\r\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \"Heading link\") Heading link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n\r\n#### 标题（用底线的形式）Heading (underline)\r\n\r\nThis is an H1\r\n=============\r\n\r\nThis is an H2\r\n-------------\r\n\r\n### 字符效果和横线等\r\n                \r\n----\r\n\r\n~~删除线~~ <s>删除线（开启识别HTML标签时）</s>\r\n*斜体字*      _斜体字_\r\n**粗体**  __粗体__\r\n***粗斜体*** ___粗斜体___\r\n\r\n上标：X<sub>2</sub>，下标：O<sup>2</sup>\r\n\r\n**缩写(同HTML的abbr标签)**\r\n\r\n> 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启\r\n\r\nThe <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.\r\n\r\n### 引用 Blockquotes\r\n\r\n> 引用文本 Blockquotes\r\n\r\n引用的行内混合 Blockquotes\r\n                    \r\n> 引用：如果想要插入空白换行`即<br />标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](http://localhost/)。\r\n\r\n### 锚点与链接 Links\r\n\r\n[普通链接](http://localhost/)\r\n\r\n[普通链接带标题](http://localhost/ \"普通链接带标题\")\r\n\r\n直接链接：<https://github.com>\r\n\r\n[锚点链接][anchor-id] \r\n\r\n[anchor-id]: http://www.this-anchor-link.com/\r\n\r\nGFM a-tail link @pandao\r\n\r\n> @pandao\r\n\r\n### 多语言代码高亮 Codes\r\n\r\n#### 行内代码 Inline code\r\n\r\n执行命令：`npm install marked`\r\n\r\n#### 缩进风格\r\n\r\n即缩进四个空格，也做为实现类似`<pre>`预格式化文本(Preformatted Text)的功能。\r\n\r\n    <?php\r\n        echo \"Hello world!\";\r\n    ?>\r\n    \r\n预格式化文本：\r\n\r\n    | First Header  | Second Header |\r\n    | ------------- | ------------- |\r\n    | Content Cell  | Content Cell  |\r\n    | Content Cell  | Content Cell  |\r\n\r\n#### JS代码　\r\n\r\n```javascript\r\nfunction test(){\r\n	console.log(\"Hello world!\");\r\n}\r\n \r\n(function(){\r\n    var box = function(){\r\n        return box.fn.init();\r\n    };\r\n\r\n    box.prototype = box.fn = {\r\n        init : function(){\r\n            console.log(\'box.init()\');\r\n\r\n			return this;\r\n        },\r\n\r\n		add : function(str){\r\n			alert(\"add\", str);\r\n\r\n			return this;\r\n		},\r\n\r\n		remove : function(str){\r\n			alert(\"remove\", str);\r\n\r\n			return this;\r\n		}\r\n    };\r\n    \r\n    box.fn.init.prototype = box.fn;\r\n    \r\n    window.box =box;\r\n})();\r\n\r\nvar testBox = box();\r\ntestBox.add(\"jQuery\").remove(\"jQuery\");\r\n```\r\n\r\n#### HTML代码 HTML codes\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <mate charest=\"utf-8\" />\r\n        <title>Hello world!</title>\r\n    </head>\r\n    <body>\r\n        <h1>Hello world!</h1>\r\n    </body>\r\n</html>\r\n```\r\n\r\n### 图片 Images\r\n\r\nImage:\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\r\n\r\n> Follow your heart.\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\r\n\r\n> 图为：厦门白城沙滩\r\n\r\n图片加链接 (Image + Link)：\r\n\r\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/examples/images/7.jpg \"李健首张专辑《似水流年》封面\")\r\n\r\n> 图为：李健首张专辑《似水流年》封面\r\n                \r\n----\r\n\r\n### 列表 Lists\r\n\r\n#### 无序列表（减号）Unordered Lists (-)\r\n                \r\n- 列表一\r\n- 列表二\r\n- 列表三\r\n     \r\n#### 无序列表（星号）Unordered Lists (*)\r\n\r\n* 列表一\r\n* 列表二\r\n* 列表三\r\n\r\n#### 无序列表（加号和嵌套）Unordered Lists (+)\r\n                \r\n+ 列表一\r\n+ 列表二\r\n    + 列表二-1\r\n    + 列表二-2\r\n    + 列表二-3\r\n+ 列表三\r\n    * 列表一\r\n    * 列表二\r\n    * 列表三\r\n\r\n#### 有序列表 Ordered Lists (-)\r\n                \r\n1. 第一行\r\n2. 第二行\r\n3. 第三行\r\n\r\n#### GFM task list\r\n\r\n- [x] GFM task list 1\r\n- [x] GFM task list 2\r\n- [ ] GFM task list 3\r\n    - [ ] GFM task list 3-1\r\n    - [ ] GFM task list 3-2\r\n    - [ ] GFM task list 3-3\r\n- [ ] GFM task list 4\r\n    - [ ] GFM task list 4-1\r\n    - [ ] GFM task list 4-2\r\n                \r\n----\r\n                    \r\n### 绘制表格 Tables\r\n\r\n| 项目        | 价格   |  数量  |\r\n| --------   | -----:  | :----:  |\r\n| 计算机      | $1600   |   5     |\r\n| 手机        |   $12   |   12   |\r\n| 管线        |    $1    |  234  |\r\n                    \r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell \r\n\r\n| First Header  | Second Header |\r\n| ------------- | ------------- |\r\n| Content Cell  | Content Cell  |\r\n| Content Cell  | Content Cell  |\r\n\r\n| Function name | Description                    |\r\n| ------------- | ------------------------------ |\r\n| `help()`      | Display the help window.       |\r\n| `destroy()`   | **Destroy your computer!**     |\r\n\r\n| Left-Aligned  | Center Aligned  | Right Aligned |\r\n| :------------ |:---------------:| -----:|\r\n| col 3 is      | some wordy text | $1600 |\r\n| col 2 is      | centered        |   $12 |\r\n| zebra stripes | are neat        |    $1 |\r\n\r\n| Item      | Value |\r\n| --------- | -----:|\r\n| Computer  | $1600 |\r\n| Phone     |   $12 |\r\n| Pipe      |    $1 |\r\n                \r\n----\r\n\r\n#### 特殊符号 HTML Entities Codes\r\n\r\n&copy; &  &uml; &trade; &iexcl; &pound;\r\n&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; \r\n\r\nX&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;\r\n\r\n18&ordm;C  &quot;  &apos;\r\n\r\n### Emoji表情 :smiley:\r\n\r\n> Blockquotes :star:\r\n\r\n#### GFM task lists & Emoji & fontAwesome icon emoji & editormd logo emoji :editormd-logo-5x:\r\n\r\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <del>tags</del> supported :editormd-logo:;\r\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\r\n- [x] [ ] :smiley: this is a complete item :smiley:;\r\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao; \r\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\r\n \r\n#### 反斜杠 Escape\r\n\r\n\\*literal asterisks\\*\r\n            \r\n### 科学公式 TeX(KaTeX)\r\n                    \r\n$$E=mc^2$$\r\n\r\n行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。\r\n\r\n$$\\(\\sqrt{3x-1}+(1+x)^2\\)$$\r\n                    \r\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$\r\n\r\n多行公式：\r\n\r\n```math\r\n\\displaystyle\r\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\r\n\\leq\r\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\r\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\r\n```\r\n\r\n```katex\r\n\\displaystyle \r\n    \\frac{1}{\r\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\r\n        \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {\r\n        1+\\frac{e^{-6\\pi}}\r\n        {1+\\frac{e^{-8\\pi}}\r\n         {1+\\cdots} }\r\n        } \r\n    }\r\n```\r\n\r\n```latex\r\nf(x) = \\int_{-\\infty}^\\infty\r\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n    \\,d\\xi\r\n```\r\n                \r\n### 绘制流程图 Flowchart\r\n\r\n```flow\r\nst=>start: 用户登陆\r\nop=>operation: 登陆操作\r\ncond=>condition: 登陆成功 Yes or No?\r\ne=>end: 进入后台\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n```\r\n                    \r\n### 绘制序列图 Sequence Diagram\r\n                    \r\n```seq\r\nAndrew->China: Says Hello \r\nNote right of China: China thinks\\nabout it \r\nChina-->Andrew: How are you? \r\nAndrew->>China: I am good thanks!\r\n```\r\n\r\n### End',10),(11,'### 主要特性\r\n\r\n- 支持“标准”Markdown / CommonMark和Github风格的语法，也可变身为代码编辑器；\r\n- 支持实时预览、图片（跨域）上传、预格式文本/代码/表格插入、代码折叠、搜索替换、只读模式、自定义样式主题和多语言语法高亮等功能；\r\n- 支持ToC（Table of Contents）、Emoji表情、Task lists、@链接等Markdown扩展语法；\r\n- 支持TeX科学公式（基于KaTeX）、流程图 Flowchart 和 时序图 Sequence Diagram;\r\n- 支持识别和解析HTML标签，并且支持自定义过滤标签解析，具有可靠的安全性和几乎无限的扩展性；\r\n- 支持 AMD / CMD 模块化加载（支持 Require.js & Sea.js），并且支持自定义扩展插件；\r\n- 兼容主流的浏览器（IE8+）和Zepto.js，且支持iPad等平板设备；\r\n- 支持自定义主题样式；\r\n\r\n# Editor.md\r\n\r\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\r\n\r\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\r\n\r\n**目录 (Table of Contents)**\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n# Heading 1\r\n## Heading 2\r\n### Heading 3\r\n#### Heading 4\r\n##### Heading 5\r\n###### Heading 6\r\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \"Heading link\") Heading link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n\r\n#### 标题（用底线的形式）Heading (underline)\r\n\r\nThis is an H1\r\n=============\r\n\r\nThis is an H2\r\n-------------\r\n\r\n### 字符效果和横线等\r\n                \r\n----\r\n\r\n~~删除线~~ <s>删除线（开启识别HTML标签时）</s>\r\n*斜体字*      _斜体字_\r\n**粗体**  __粗体__\r\n***粗斜体*** ___粗斜体___\r\n\r\n上标：X<sub>2</sub>，下标：O<sup>2</sup>\r\n\r\n**缩写(同HTML的abbr标签)**\r\n\r\n> 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启\r\n\r\nThe <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.\r\n\r\n### 引用 Blockquotes\r\n\r\n> 引用文本 Blockquotes\r\n\r\n引用的行内混合 Blockquotes\r\n                    \r\n> 引用：如果想要插入空白换行`即<br />标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](http://localhost/)。\r\n\r\n### 锚点与链接 Links\r\n\r\n[普通链接](http://localhost/)\r\n\r\n[普通链接带标题](http://localhost/ \"普通链接带标题\")\r\n\r\n直接链接：<https://github.com>\r\n\r\n[锚点链接][anchor-id] \r\n\r\n[anchor-id]: http://www.this-anchor-link.com/\r\n\r\nGFM a-tail link @pandao\r\n\r\n> @pandao\r\n\r\n### 多语言代码高亮 Codes\r\n\r\n#### 行内代码 Inline code\r\n\r\n执行命令：`npm install marked`\r\n\r\n#### 缩进风格\r\n\r\n即缩进四个空格，也做为实现类似`<pre>`预格式化文本(Preformatted Text)的功能。\r\n\r\n    <?php\r\n        echo \"Hello world!\";\r\n    ?>\r\n    \r\n预格式化文本：\r\n\r\n    | First Header  | Second Header |\r\n    | ------------- | ------------- |\r\n    | Content Cell  | Content Cell  |\r\n    | Content Cell  | Content Cell  |\r\n\r\n#### JS代码　\r\n\r\n```javascript\r\nfunction test(){\r\n	console.log(\"Hello world!\");\r\n}\r\n \r\n(function(){\r\n    var box = function(){\r\n        return box.fn.init();\r\n    };\r\n\r\n    box.prototype = box.fn = {\r\n        init : function(){\r\n            console.log(\'box.init()\');\r\n\r\n			return this;\r\n        },\r\n\r\n		add : function(str){\r\n			alert(\"add\", str);\r\n\r\n			return this;\r\n		},\r\n\r\n		remove : function(str){\r\n			alert(\"remove\", str);\r\n\r\n			return this;\r\n		}\r\n    };\r\n    \r\n    box.fn.init.prototype = box.fn;\r\n    \r\n    window.box =box;\r\n})();\r\n\r\nvar testBox = box();\r\ntestBox.add(\"jQuery\").remove(\"jQuery\");\r\n```\r\n\r\n#### HTML代码 HTML codes\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <mate charest=\"utf-8\" />\r\n        <title>Hello world!</title>\r\n    </head>\r\n    <body>\r\n        <h1>Hello world!</h1>\r\n    </body>\r\n</html>\r\n```\r\n\r\n### 图片 Images\r\n\r\nImage:\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\r\n\r\n> Follow your heart.\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\r\n\r\n> 图为：厦门白城沙滩\r\n\r\n图片加链接 (Image + Link)：\r\n\r\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/examples/images/7.jpg \"李健首张专辑《似水流年》封面\")\r\n\r\n> 图为：李健首张专辑《似水流年》封面\r\n                \r\n----\r\n\r\n### 列表 Lists\r\n\r\n#### 无序列表（减号）Unordered Lists (-)\r\n                \r\n- 列表一\r\n- 列表二\r\n- 列表三\r\n     \r\n#### 无序列表（星号）Unordered Lists (*)\r\n\r\n* 列表一\r\n* 列表二\r\n* 列表三\r\n\r\n#### 无序列表（加号和嵌套）Unordered Lists (+)\r\n                \r\n+ 列表一\r\n+ 列表二\r\n    + 列表二-1\r\n    + 列表二-2\r\n    + 列表二-3\r\n+ 列表三\r\n    * 列表一\r\n    * 列表二\r\n    * 列表三\r\n\r\n#### 有序列表 Ordered Lists (-)\r\n                \r\n1. 第一行\r\n2. 第二行\r\n3. 第三行\r\n\r\n#### GFM task list\r\n\r\n- [x] GFM task list 1\r\n- [x] GFM task list 2\r\n- [ ] GFM task list 3\r\n    - [ ] GFM task list 3-1\r\n    - [ ] GFM task list 3-2\r\n    - [ ] GFM task list 3-3\r\n- [ ] GFM task list 4\r\n    - [ ] GFM task list 4-1\r\n    - [ ] GFM task list 4-2\r\n                \r\n----\r\n                    \r\n### 绘制表格 Tables\r\n\r\n| 项目        | 价格   |  数量  |\r\n| --------   | -----:  | :----:  |\r\n| 计算机      | $1600   |   5     |\r\n| 手机        |   $12   |   12   |\r\n| 管线        |    $1    |  234  |\r\n                    \r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell \r\n\r\n| First Header  | Second Header |\r\n| ------------- | ------------- |\r\n| Content Cell  | Content Cell  |\r\n| Content Cell  | Content Cell  |\r\n\r\n| Function name | Description                    |\r\n| ------------- | ------------------------------ |\r\n| `help()`      | Display the help window.       |\r\n| `destroy()`   | **Destroy your computer!**     |\r\n\r\n| Left-Aligned  | Center Aligned  | Right Aligned |\r\n| :------------ |:---------------:| -----:|\r\n| col 3 is      | some wordy text | $1600 |\r\n| col 2 is      | centered        |   $12 |\r\n| zebra stripes | are neat        |    $1 |\r\n\r\n| Item      | Value |\r\n| --------- | -----:|\r\n| Computer  | $1600 |\r\n| Phone     |   $12 |\r\n| Pipe      |    $1 |\r\n                \r\n----\r\n\r\n#### 特殊符号 HTML Entities Codes\r\n\r\n&copy; &  &uml; &trade; &iexcl; &pound;\r\n&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; \r\n\r\nX&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;\r\n\r\n18&ordm;C  &quot;  &apos;\r\n\r\n### Emoji表情 :smiley:\r\n\r\n> Blockquotes :star:\r\n\r\n#### GFM task lists & Emoji & fontAwesome icon emoji & editormd logo emoji :editormd-logo-5x:\r\n\r\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <del>tags</del> supported :editormd-logo:;\r\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\r\n- [x] [ ] :smiley: this is a complete item :smiley:;\r\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao; \r\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\r\n \r\n#### 反斜杠 Escape\r\n\r\n\\*literal asterisks\\*\r\n            \r\n### 科学公式 TeX(KaTeX)\r\n                    \r\n$$E=mc^2$$\r\n\r\n行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。\r\n\r\n$$\\(\\sqrt{3x-1}+(1+x)^2\\)$$\r\n                    \r\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$\r\n\r\n多行公式：\r\n\r\n```math\r\n\\displaystyle\r\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\r\n\\leq\r\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\r\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\r\n```\r\n\r\n```katex\r\n\\displaystyle \r\n    \\frac{1}{\r\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\r\n        \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {\r\n        1+\\frac{e^{-6\\pi}}\r\n        {1+\\frac{e^{-8\\pi}}\r\n         {1+\\cdots} }\r\n        } \r\n    }\r\n```\r\n\r\n```latex\r\nf(x) = \\int_{-\\infty}^\\infty\r\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n    \\,d\\xi\r\n```\r\n                \r\n### 绘制流程图 Flowchart\r\n\r\n```flow\r\nst=>start: 用户登陆\r\nop=>operation: 登陆操作\r\ncond=>condition: 登陆成功 Yes or No?\r\ne=>end: 进入后台\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n```\r\n                    \r\n### 绘制序列图 Sequence Diagram\r\n                    \r\n```seq\r\nAndrew->China: Says Hello \r\nNote right of China: China thinks\\nabout it \r\nChina-->Andrew: How are you? \r\nAndrew->>China: I am good thanks!\r\n```\r\n\r\n### End',11),(12,'### 主要特性\r\n\r\n- 支持“标准”Markdown / CommonMark和Github风格的语法，也可变身为代码编辑器；\r\n- 支持实时预览、图片（跨域）上传、预格式文本/代码/表格插入、代码折叠、搜索替换、只读模式、自定义样式主题和多语言语法高亮等功能；\r\n- 支持ToC（Table of Contents）、Emoji表情、Task lists、@链接等Markdown扩展语法；\r\n- 支持TeX科学公式（基于KaTeX）、流程图 Flowchart 和 时序图 Sequence Diagram;\r\n- 支持识别和解析HTML标签，并且支持自定义过滤标签解析，具有可靠的安全性和几乎无限的扩展性；\r\n- 支持 AMD / CMD 模块化加载（支持 Require.js & Sea.js），并且支持自定义扩展插件；\r\n- 兼容主流的浏览器（IE8+）和Zepto.js，且支持iPad等平板设备；\r\n- 支持自定义主题样式；\r\n\r\n# Editor.md\r\n\r\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\r\n\r\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\r\n\r\n**目录 (Table of Contents)**\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n# Heading 1\r\n## Heading 2\r\n### Heading 3\r\n#### Heading 4\r\n##### Heading 5\r\n###### Heading 6\r\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \"Heading link\") Heading link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n\r\n#### 标题（用底线的形式）Heading (underline)\r\n\r\nThis is an H1\r\n=============\r\n\r\nThis is an H2\r\n-------------\r\n\r\n### 字符效果和横线等\r\n                \r\n----\r\n\r\n~~删除线~~ <s>删除线（开启识别HTML标签时）</s>\r\n*斜体字*      _斜体字_\r\n**粗体**  __粗体__\r\n***粗斜体*** ___粗斜体___\r\n\r\n上标：X<sub>2</sub>，下标：O<sup>2</sup>\r\n\r\n**缩写(同HTML的abbr标签)**\r\n\r\n> 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启\r\n\r\nThe <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.\r\n\r\n### 引用 Blockquotes\r\n\r\n> 引用文本 Blockquotes\r\n\r\n引用的行内混合 Blockquotes\r\n                    \r\n> 引用：如果想要插入空白换行`即<br />标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](http://localhost/)。\r\n\r\n### 锚点与链接 Links\r\n\r\n[普通链接](http://localhost/)\r\n\r\n[普通链接带标题](http://localhost/ \"普通链接带标题\")\r\n\r\n直接链接：<https://github.com>\r\n\r\n[锚点链接][anchor-id] \r\n\r\n[anchor-id]: http://www.this-anchor-link.com/\r\n\r\nGFM a-tail link @pandao\r\n\r\n> @pandao\r\n\r\n### 多语言代码高亮 Codes\r\n\r\n#### 行内代码 Inline code\r\n\r\n执行命令：`npm install marked`\r\n\r\n#### 缩进风格\r\n\r\n即缩进四个空格，也做为实现类似`<pre>`预格式化文本(Preformatted Text)的功能。\r\n\r\n    <?php\r\n        echo \"Hello world!\";\r\n    ?>\r\n    \r\n预格式化文本：\r\n\r\n    | First Header  | Second Header |\r\n    | ------------- | ------------- |\r\n    | Content Cell  | Content Cell  |\r\n    | Content Cell  | Content Cell  |\r\n\r\n#### JS代码　\r\n\r\n```javascript\r\nfunction test(){\r\n	console.log(\"Hello world!\");\r\n}\r\n \r\n(function(){\r\n    var box = function(){\r\n        return box.fn.init();\r\n    };\r\n\r\n    box.prototype = box.fn = {\r\n        init : function(){\r\n            console.log(\'box.init()\');\r\n\r\n			return this;\r\n        },\r\n\r\n		add : function(str){\r\n			alert(\"add\", str);\r\n\r\n			return this;\r\n		},\r\n\r\n		remove : function(str){\r\n			alert(\"remove\", str);\r\n\r\n			return this;\r\n		}\r\n    };\r\n    \r\n    box.fn.init.prototype = box.fn;\r\n    \r\n    window.box =box;\r\n})();\r\n\r\nvar testBox = box();\r\ntestBox.add(\"jQuery\").remove(\"jQuery\");\r\n```\r\n\r\n#### HTML代码 HTML codes\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <mate charest=\"utf-8\" />\r\n        <title>Hello world!</title>\r\n    </head>\r\n    <body>\r\n        <h1>Hello world!</h1>\r\n    </body>\r\n</html>\r\n```\r\n\r\n### 图片 Images\r\n\r\nImage:\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\r\n\r\n> Follow your heart.\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\r\n\r\n> 图为：厦门白城沙滩\r\n\r\n图片加链接 (Image + Link)：\r\n\r\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/examples/images/7.jpg \"李健首张专辑《似水流年》封面\")\r\n\r\n> 图为：李健首张专辑《似水流年》封面\r\n                \r\n----\r\n\r\n### 列表 Lists\r\n\r\n#### 无序列表（减号）Unordered Lists (-)\r\n                \r\n- 列表一\r\n- 列表二\r\n- 列表三\r\n     \r\n#### 无序列表（星号）Unordered Lists (*)\r\n\r\n* 列表一\r\n* 列表二\r\n* 列表三\r\n\r\n#### 无序列表（加号和嵌套）Unordered Lists (+)\r\n                \r\n+ 列表一\r\n+ 列表二\r\n    + 列表二-1\r\n    + 列表二-2\r\n    + 列表二-3\r\n+ 列表三\r\n    * 列表一\r\n    * 列表二\r\n    * 列表三\r\n\r\n#### 有序列表 Ordered Lists (-)\r\n                \r\n1. 第一行\r\n2. 第二行\r\n3. 第三行\r\n\r\n#### GFM task list\r\n\r\n- [x] GFM task list 1\r\n- [x] GFM task list 2\r\n- [ ] GFM task list 3\r\n    - [ ] GFM task list 3-1\r\n    - [ ] GFM task list 3-2\r\n    - [ ] GFM task list 3-3\r\n- [ ] GFM task list 4\r\n    - [ ] GFM task list 4-1\r\n    - [ ] GFM task list 4-2\r\n                \r\n----\r\n                    \r\n### 绘制表格 Tables\r\n\r\n| 项目        | 价格   |  数量  |\r\n| --------   | -----:  | :----:  |\r\n| 计算机      | $1600   |   5     |\r\n| 手机        |   $12   |   12   |\r\n| 管线        |    $1    |  234  |\r\n                    \r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell \r\n\r\n| First Header  | Second Header |\r\n| ------------- | ------------- |\r\n| Content Cell  | Content Cell  |\r\n| Content Cell  | Content Cell  |\r\n\r\n| Function name | Description                    |\r\n| ------------- | ------------------------------ |\r\n| `help()`      | Display the help window.       |\r\n| `destroy()`   | **Destroy your computer!**     |\r\n\r\n| Left-Aligned  | Center Aligned  | Right Aligned |\r\n| :------------ |:---------------:| -----:|\r\n| col 3 is      | some wordy text | $1600 |\r\n| col 2 is      | centered        |   $12 |\r\n| zebra stripes | are neat        |    $1 |\r\n\r\n| Item      | Value |\r\n| --------- | -----:|\r\n| Computer  | $1600 |\r\n| Phone     |   $12 |\r\n| Pipe      |    $1 |\r\n                \r\n----\r\n\r\n#### 特殊符号 HTML Entities Codes\r\n\r\n&copy; &  &uml; &trade; &iexcl; &pound;\r\n&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; \r\n\r\nX&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;\r\n\r\n18&ordm;C  &quot;  &apos;\r\n\r\n### Emoji表情 :smiley:\r\n\r\n> Blockquotes :star:\r\n\r\n#### GFM task lists & Emoji & fontAwesome icon emoji & editormd logo emoji :editormd-logo-5x:\r\n\r\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <del>tags</del> supported :editormd-logo:;\r\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\r\n- [x] [ ] :smiley: this is a complete item :smiley:;\r\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao; \r\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\r\n \r\n#### 反斜杠 Escape\r\n\r\n\\*literal asterisks\\*\r\n            \r\n### 科学公式 TeX(KaTeX)\r\n                    \r\n$$E=mc^2$$\r\n\r\n行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。\r\n\r\n$$\\(\\sqrt{3x-1}+(1+x)^2\\)$$\r\n                    \r\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$\r\n\r\n多行公式：\r\n\r\n```math\r\n\\displaystyle\r\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\r\n\\leq\r\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\r\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\r\n```\r\n\r\n```katex\r\n\\displaystyle \r\n    \\frac{1}{\r\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\r\n        \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {\r\n        1+\\frac{e^{-6\\pi}}\r\n        {1+\\frac{e^{-8\\pi}}\r\n         {1+\\cdots} }\r\n        } \r\n    }\r\n```\r\n\r\n```latex\r\nf(x) = \\int_{-\\infty}^\\infty\r\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n    \\,d\\xi\r\n```\r\n                \r\n### 绘制流程图 Flowchart\r\n\r\n```flow\r\nst=>start: 用户登陆\r\nop=>operation: 登陆操作\r\ncond=>condition: 登陆成功 Yes or No?\r\ne=>end: 进入后台\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n```\r\n                    \r\n### 绘制序列图 Sequence Diagram\r\n                    \r\n```seq\r\nAndrew->China: Says Hello \r\nNote right of China: China thinks\\nabout it \r\nChina-->Andrew: How are you? \r\nAndrew->>China: I am good thanks!\r\n```\r\n\r\n### End',12),(13,'### 主要特性\r\n\r\n- 支持“标准”Markdown / CommonMark和Github风格的语法，也可变身为代码编辑器；\r\n- 支持实时预览、图片（跨域）上传、预格式文本/代码/表格插入、代码折叠、搜索替换、只读模式、自定义样式主题和多语言语法高亮等功能；\r\n- 支持ToC（Table of Contents）、Emoji表情、Task lists、@链接等Markdown扩展语法；\r\n- 支持TeX科学公式（基于KaTeX）、流程图 Flowchart 和 时序图 Sequence Diagram;\r\n- 支持识别和解析HTML标签，并且支持自定义过滤标签解析，具有可靠的安全性和几乎无限的扩展性；\r\n- 支持 AMD / CMD 模块化加载（支持 Require.js & Sea.js），并且支持自定义扩展插件；\r\n- 兼容主流的浏览器（IE8+）和Zepto.js，且支持iPad等平板设备；\r\n- 支持自定义主题样式；\r\n\r\n# Editor.md\r\n\r\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\r\n\r\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\r\n\r\n**目录 (Table of Contents)**\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n# Heading 1\r\n## Heading 2\r\n### Heading 3\r\n#### Heading 4\r\n##### Heading 5\r\n###### Heading 6\r\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \"Heading link\") Heading link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\r\n\r\n#### 标题（用底线的形式）Heading (underline)\r\n\r\nThis is an H1\r\n=============\r\n\r\nThis is an H2\r\n-------------\r\n\r\n### 字符效果和横线等\r\n                \r\n----\r\n\r\n~~删除线~~ <s>删除线（开启识别HTML标签时）</s>\r\n*斜体字*      _斜体字_\r\n**粗体**  __粗体__\r\n***粗斜体*** ___粗斜体___\r\n\r\n上标：X<sub>2</sub>，下标：O<sup>2</sup>\r\n\r\n**缩写(同HTML的abbr标签)**\r\n\r\n> 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启\r\n\r\nThe <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.\r\n\r\n### 引用 Blockquotes\r\n\r\n> 引用文本 Blockquotes\r\n\r\n引用的行内混合 Blockquotes\r\n                    \r\n> 引用：如果想要插入空白换行`即<br />标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](http://localhost/)。\r\n\r\n### 锚点与链接 Links\r\n\r\n[普通链接](http://localhost/)\r\n\r\n[普通链接带标题](http://localhost/ \"普通链接带标题\")\r\n\r\n直接链接：<https://github.com>\r\n\r\n[锚点链接][anchor-id] \r\n\r\n[anchor-id]: http://www.this-anchor-link.com/\r\n\r\nGFM a-tail link @pandao\r\n\r\n> @pandao\r\n\r\n### 多语言代码高亮 Codes\r\n\r\n#### 行内代码 Inline code\r\n\r\n执行命令：`npm install marked`\r\n\r\n#### 缩进风格\r\n\r\n即缩进四个空格，也做为实现类似`<pre>`预格式化文本(Preformatted Text)的功能。\r\n\r\n    <?php\r\n        echo \"Hello world!\";\r\n    ?>\r\n    \r\n预格式化文本：\r\n\r\n    | First Header  | Second Header |\r\n    | ------------- | ------------- |\r\n    | Content Cell  | Content Cell  |\r\n    | Content Cell  | Content Cell  |\r\n\r\n#### JS代码　\r\n\r\n```javascript\r\nfunction test(){\r\n	console.log(\"Hello world!\");\r\n}\r\n \r\n(function(){\r\n    var box = function(){\r\n        return box.fn.init();\r\n    };\r\n\r\n    box.prototype = box.fn = {\r\n        init : function(){\r\n            console.log(\'box.init()\');\r\n\r\n			return this;\r\n        },\r\n\r\n		add : function(str){\r\n			alert(\"add\", str);\r\n\r\n			return this;\r\n		},\r\n\r\n		remove : function(str){\r\n			alert(\"remove\", str);\r\n\r\n			return this;\r\n		}\r\n    };\r\n    \r\n    box.fn.init.prototype = box.fn;\r\n    \r\n    window.box =box;\r\n})();\r\n\r\nvar testBox = box();\r\ntestBox.add(\"jQuery\").remove(\"jQuery\");\r\n```\r\n\r\n#### HTML代码 HTML codes\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <mate charest=\"utf-8\" />\r\n        <title>Hello world!</title>\r\n    </head>\r\n    <body>\r\n        <h1>Hello world!</h1>\r\n    </body>\r\n</html>\r\n```\r\n\r\n### 图片 Images\r\n\r\nImage:\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\r\n\r\n> Follow your heart.\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\r\n\r\n> 图为：厦门白城沙滩\r\n\r\n图片加链接 (Image + Link)：\r\n\r\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/examples/images/7.jpg \"李健首张专辑《似水流年》封面\")\r\n\r\n> 图为：李健首张专辑《似水流年》封面\r\n                \r\n----\r\n\r\n### 列表 Lists\r\n\r\n#### 无序列表（减号）Unordered Lists (-)\r\n                \r\n- 列表一\r\n- 列表二\r\n- 列表三\r\n     \r\n#### 无序列表（星号）Unordered Lists (*)\r\n\r\n* 列表一\r\n* 列表二\r\n* 列表三\r\n\r\n#### 无序列表（加号和嵌套）Unordered Lists (+)\r\n                \r\n+ 列表一\r\n+ 列表二\r\n    + 列表二-1\r\n    + 列表二-2\r\n    + 列表二-3\r\n+ 列表三\r\n    * 列表一\r\n    * 列表二\r\n    * 列表三\r\n\r\n#### 有序列表 Ordered Lists (-)\r\n                \r\n1. 第一行\r\n2. 第二行\r\n3. 第三行\r\n\r\n#### GFM task list\r\n\r\n- [x] GFM task list 1\r\n- [x] GFM task list 2\r\n- [ ] GFM task list 3\r\n    - [ ] GFM task list 3-1\r\n    - [ ] GFM task list 3-2\r\n    - [ ] GFM task list 3-3\r\n- [ ] GFM task list 4\r\n    - [ ] GFM task list 4-1\r\n    - [ ] GFM task list 4-2\r\n                \r\n----\r\n                    \r\n### 绘制表格 Tables\r\n\r\n| 项目        | 价格   |  数量  |\r\n| --------   | -----:  | :----:  |\r\n| 计算机      | $1600   |   5     |\r\n| 手机        |   $12   |   12   |\r\n| 管线        |    $1    |  234  |\r\n                    \r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell \r\n\r\n| First Header  | Second Header |\r\n| ------------- | ------------- |\r\n| Content Cell  | Content Cell  |\r\n| Content Cell  | Content Cell  |\r\n\r\n| Function name | Description                    |\r\n| ------------- | ------------------------------ |\r\n| `help()`      | Display the help window.       |\r\n| `destroy()`   | **Destroy your computer!**     |\r\n\r\n| Left-Aligned  | Center Aligned  | Right Aligned |\r\n| :------------ |:---------------:| -----:|\r\n| col 3 is      | some wordy text | $1600 |\r\n| col 2 is      | centered        |   $12 |\r\n| zebra stripes | are neat        |    $1 |\r\n\r\n| Item      | Value |\r\n| --------- | -----:|\r\n| Computer  | $1600 |\r\n| Phone     |   $12 |\r\n| Pipe      |    $1 |\r\n                \r\n----\r\n\r\n#### 特殊符号 HTML Entities Codes\r\n\r\n&copy; &  &uml; &trade; &iexcl; &pound;\r\n&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; \r\n\r\nX&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;\r\n\r\n18&ordm;C  &quot;  &apos;\r\n\r\n### Emoji表情 :smiley:\r\n\r\n> Blockquotes :star:\r\n\r\n#### GFM task lists & Emoji & fontAwesome icon emoji & editormd logo emoji :editormd-logo-5x:\r\n\r\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <del>tags</del> supported :editormd-logo:;\r\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\r\n- [x] [ ] :smiley: this is a complete item :smiley:;\r\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao; \r\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\r\n \r\n#### 反斜杠 Escape\r\n\r\n\\*literal asterisks\\*\r\n            \r\n### 科学公式 TeX(KaTeX)\r\n                    \r\n$$E=mc^2$$\r\n\r\n行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。\r\n\r\n$$\\(\\sqrt{3x-1}+(1+x)^2\\)$$\r\n                    \r\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$\r\n\r\n多行公式：\r\n\r\n```math\r\n\\displaystyle\r\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\r\n\\leq\r\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\r\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\r\n```\r\n\r\n```katex\r\n\\displaystyle \r\n    \\frac{1}{\r\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\r\n        \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {\r\n        1+\\frac{e^{-6\\pi}}\r\n        {1+\\frac{e^{-8\\pi}}\r\n         {1+\\cdots} }\r\n        } \r\n    }\r\n```\r\n\r\n```latex\r\nf(x) = \\int_{-\\infty}^\\infty\r\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n    \\,d\\xi\r\n```\r\n                \r\n### 绘制流程图 Flowchart\r\n\r\n```flow\r\nst=>start: 用户登陆\r\nop=>operation: 登陆操作\r\ncond=>condition: 登陆成功 Yes or No?\r\ne=>end: 进入后台\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n```\r\n                    \r\n### 绘制序列图 Sequence Diagram\r\n                    \r\n```seq\r\nAndrew->China: Says Hello \r\nNote right of China: China thinks\\nabout it \r\nChina-->Andrew: How are you? \r\nAndrew->>China: I am good thanks!\r\n```\r\n\r\n### End',13),(38,'## HTML介绍\n### web服务的实质\n\n```\nimport socket\n\nsk = socket.socket()\n\nsk.bind((\"127.0.0.1\", 8080))\nsk.listen(5)\nwhile True:\n    conn, addr = sk.accept()\n    data = conn.recv(8096)\n    conn.send(b\"HTTP/1.1 200 OK\\r\\n\\r\\n\")\n    conn.secd(b\"<h1>Hello world!</h1>\")\n    conn.close()\n```\n>过程：浏览器发请求 --> HTTP协议 --> 服务端接收请求 --> 服务端返回响应 --> 服务端把HTML文件内容发给浏览器 --> 浏览器渲染页面。\n### HTML是什么\n>超文本标记语言（Hypertext Markup Language, HTML）是一种用于创建网页的标记语言。\n>&nbsp;\n本质上是浏览器可识别的规则，我们按照规则写网页，浏览器根据规则渲染我们的网页。对于不同的浏览器，对同一个标签可能会有不同的解释。（兼容性问题）\n&nbsp;\n网页文件的扩展名：.html或.htm\n\n### HTML文档结构\n\n```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>css样式优先级</title>\n</head>\n<body>\n\n</body>\n</html>\n```\n其中：\n\n> \n> 1. `<!DOCTYPE html>`声明为HTML5文档。\n2. `<html>`、`</html>`是文档的开始标记和结束的标记。是HTML页面的根元素，在它们之间是文档的头部（head）和主体（body）。\n3. `<head>`、`</head>`定义了HTML文档的开头部分。它们之间的内容不会在浏览器的文档窗口显示。包含了文档的元（meta）数据。\n4. `<title>`、`</title>`定义了网页标题，在浏览器标题栏显示。\n5. `<body>`、`</body>`之间的文本是可见的网页主体内容。\n\n注意：对于中文网页需要使用 `<meta charset=\"utf-8\">` 声明编码，否则会出现乱码。有些浏览器会设置 GBK 为默认编码，则你需要设置为 `<meta charset=\"gbk\">`\n### HTML标签格式\n\n> - HTML标签是由尖括号包围的关键字，如`<html>`, `<div>`等\n- HTML标签通常是成对出现的，比如：`<div>`和`</div>`，第一个标签是开始，第二个标签是结束。结束标签会有斜线。\n- 也有一部分标签是单独呈现的，比如：`<br/>`、`<hr/>`、`<img src=\"1.jpg\" />`等。\n- 标签里面可以有若干属性，也可以不带属性。\n\n标签的语法：\n\n> - `<`标签名 属性1=“属性值1” 属性2=“属性值2”……`>`内容部分`<`/标签名`>`\n> - `<`标签名 属性1=“属性值1” 属性2=“属性值2”…… /`>`\n\n几个很重要的属性：\n\n> - id：定义标签的唯一ID，HTML文档树中唯一\n- class：为html元素定义一个或多个类名（classname）(CSS样式类名)\n- style：规定元素的行内样式（CSS样式）\n\n### HTML注释\n\n```\n<!--注释内容-->\n```\n### <!DOCTYPE> 声明\n\n> `<`!DOCTYPE`>` 声明必须是 HTML 文档的第一行，位于 `<`html`>` 标签之前。 \n> &nbsp;\n> `<`!DOCTYPE`>` 声明不是 HTML标签；它是指示 web 浏览器关于页面使用哪个 HTML 版本进行编写的指令。\n\n## HTML常用标签\n### head内常用标签\n| 标签 | 意义 |\n| -----------------| -----------------|\n| `<`title`><`/title`>` | 定义网页标题|\n|`<`style`><`/style`>` | 定义内部样式表|\n| `<`script`><`/script`>` | 定义JS代码或引入外部JS文件|\n| `<`link/`>` | 引入外部样式表文件 |\n| `<`meta/`>` | 定义网页原信息 |\n\n#### meta标签\n\nMeta标签介绍：\n\n> `<`meta`>`元素可提供有关页面的原信息（mata-information）,针对搜索引擎和更新频度的描述和关键词。\n`<`meta`>`标签位于文档的头部，不包含任何内容。\n`<`meta`>`提供的信息是用户不可见的。\n&nbsp;\nmeta标签的组成：meta标签共有两个属性，它们分别是http-equiv属性和name 属性，不同的属性又有不同的参数值，这些不同的参数值就实现了不同的网页功能。 \n&nbsp;\nhttp-equiv属性：相当于http的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确地显示网页内容，与之对应的属性值为content，content中的内容其实就是各个参数的变量值。\n\n```\n<!--2秒后跳转到对应的网址，注意引号-->\n<meta http-equiv=\"refresh\" content=\"2;URL=https://www.baidu.com\">\n<!--指定文档的编码类型-->\n<meta http-equiv=\"content-Type\" charset=UTF8\">\n<!--告诉IE以最高级模式渲染文档-->\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\">\n```\n> name属性: 主要用于描述网页，与之对应的属性值为content，content中的内容主要是便于搜索引擎机器人查找信息和分类信息用的。\n```\n<meta name=\"keywords\" content=\"meta总结,html meta,meta属性,meta跳转\">\n<meta name=\"description\" content=\"Python\">\n```\n### body内常用标签\n#### 基本标签（块级标签和内联标签）\n\n```\n<b>加粗</b>\n<i>斜体</i>\n<u>下划线</u>\n<s>删除</s>\n\n<p>段落标签</p>\n\n<h1>标题1</h1>\n<h2>标题2</h2>\n<h3>标题3</h3>\n<h4>标题4</h4>\n<h5>标题5</h5>\n<h6>标题6</h6>\n\n<!--换行-->\n<br>\n\n<!--水平线--><hr>\n```\n#### 特殊字符\n| 内容 | 对应代码 |\n| ----- | -----|\n| 空格 |`&nbsp;` |\n|> |`&gt;`|\n|<|`&lt;` |\n|&|`&amp;`|\n|￥|`&yen;`|\n|版权&copy;|`&copy;`|\n|注册&reg;|`&reg;`|\n\n#### div标签和span标签\n>div标签用来定义一个块级元素，并无实际的意义。主要通过CSS样式为其赋予不同的表现。\nspan标签用来定义内联(行内)元素，并无实际的意义。主要通过CSS样式为其赋予不同的表现。\n\n块级元素和行内元素的区别：\n>所谓块元素，是以另起一行开始渲染的元素，行内元素则不需另起一行。如果单独在网页中插入这两个元素，而标签内无内容，不会对页面产生任何的影响。\n这两个元素是专门为定义CSS样式而生的。\n\n注意：\n>通常块级元素可以包含内联元素或某些块级元素，但内联元素不能包含块级元素，它只能包含其它内联元素。\n>&nbsp;\n>**p标签不能包含块级标签。**\n#### img标签\n\n```\n<img src=\"图片的路径\" alt=\"图片未加载成功时的提示\" \ntitle=\"鼠标悬浮时提示信息\" width=\"宽\" \nheight=\"高(宽高两个属性只用一个会自动等比缩放)\">\n```\n#### a标签\n> a标签为超链接标签，所谓的超链接是指从一个网页指向一个目标的连接关系，这个目标可以是另一个网页，也可以是相同网页上的不同位置，还可以是一个图片，一个电子邮件地址，一个文件，甚至是一个应用程序。\n> &nbsp;\n\n关于URL：\n\n```\n什么是URL？\nURL是统一资源定位器(Uniform Resource Locator)的缩写，也被称为网页地址，是因特网上标准的资源的地址。\nURL举例\nhttp://www.sohu.com/stu/intro.html\nhttp://222.172.123.33/stu/intro.html\n\nURL地址由4部分组成\n第1部分：为协议：http://、ftp://等 \n第2部分：为站点地址：可以是域名或IP地址\n第3部分：为页面在站点中的目录：stu\n第4部分：为页面名称，例如 index.html\n各部分之间用“/”符号隔开。\n```\na标签的用法：\n\n```\n<a href=\"http://www.baidu.com\" target=\"_blank\" >百度一下</a>\n```\n>href属性指定目标网页地址。该地址可以有几种类型：\n1. 绝对URL: 指向另一个站点（比如 href=\"http://www.jd.com）\n2. 相对URL:  指当前站点中确切的路径（href=\"index.htm\"）\n3.  锚URL： 指向页面中的锚（href=\"#top\"）\n&nbsp;\ntarget的值：\n_blank表示在新标签页中打开目标网页\n_self表示在当前标签页中打开目标网页\n\n#### 列表\n- 无序列表\n```\n<ul type=\"disc\">\n  <li>第一项</li>\n  <li>第二项</li>\n</ul>\n```\n type属性：\n> disc: 实心圆点，默认值\n> circle: 空心圆圈\nsquare: 实心方块\nnone: 无样式\n\n- 有序列表\n\n```\n<ol type=\"1\" start=\"2\">\n  <li>第一项</li>\n  <li>第二项</li>\n</ol>\n```\ntype属性：\n>1 数字列表，默认值\nA 大写字母\na 小写字母\nⅠ大写罗马\nⅰ小写罗马\n\n- 标题列表\n\n```\n<dl>\n  <dt>标题1</dt>\n  <dd>内容1</dd>\n  <dt>标题2</dt>\n  <dd>内容1</dd>\n  <dd>内容2</dd>\n</dl>\n```\n#### 表格\n>表格是一个二维数据空间，一个表格由若干行组成，一个行又有若干单元格组成，单元格里可以包含文字、列表、图案、表单、数字符号、预置文本和其它的表格等内容。\n>&nbsp;\n表格最重要的目的是显示表格类数据。表格类数据是指最适合组织为表格格式（即按行和列组织）的数据。\n\n表格的基本结构：\n\n```\n<table>\n  <thead>\n  <tr>\n    <th>序号</th>\n    <th>姓名</th>\n    <th>爱好</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n    <td>1</td>\n    <td>Sam</td>\n    <td>DotA</td>\n  </tr>\n  <tr>\n    <td>2</td>\n    <td>Lee</td>\n    <td>Running</td>\n  </tr>\n  </tbody>\n</table>\n```\n属性：\n\n> border: 表格边框\n> cellpadding: 内边距\n> cellspacing: 外边距\n> width: 像素百分比（最好通过CSS来设置长宽）\n> rowspan: 单元格竖跨多少行\n> colspan: 单元格横跨多少列 （相当与合并单元格）\n\n#### form表单\n功能：\n> 表单用于向服务器传输数据，从而实现用户与Web服务器的交互\n&nbsp;\n表单能够包含input系列标签，比如文本字段、复选框、单选框、提交按钮等等。\n&nbsp;\n表单还可以包含textarea、select、fieldset和 label标签。\n\n表单属性：\n| 属性 | 描述 |\n| -----| -------- |\n|accept-charset | 规定在被提交表单中使用的字符集（默认：页面字符集）|\n|action | 规定向何处提交表单的地址（URL）（提交页面）|\n| autocomplete| 规定浏览器应该自动完成表单（默认：开启）|\n| enctype | 规定被提交数据的编码（默认：url-encode）|\n| method | 规定在提交表单时所用的 HTTP 方法（默认：GET） |\n| name |规定识别表单的名称（对于 DOM 使用：document.forms.name） |\n| novalidate | 规定浏览器不验证表单|\n| target | 规定 action 属性中地址的目标（默认：_self）| \n\n表单元素：\n> HTML表单是HTML元素中较为复杂的部分，表单往往和脚本、动态页面、数据处理等功能相结合，因此它是制作动态网站很重要的内容。\n> &nbsp;\n表单工作原理：\n访问者在浏览有表单的网页时，可填写必需的信息，然后按某个按钮提交。这些信息通过Internet传送到服务器上。 \n服务器上专门的程序对这些数据进行处理，如果有错误会返回错误信息，并要求纠正错误。当数据完整无误后，服务器反馈一个输入完成的信息。\n\n#### input标签\n`<`input`>` 元素会根据不同的 type 属性，变化为多种形态。\n| type属性值 | 表现形式 | 对应代码 |\n| ---- | ----| ---------|\n|text | 单行输入文本| `input type=\"text\"/>`|\n| password | 密码输入框 | `<input type=\"password\"/>`\n| date | 日期控件 | `<input type=\"date\" />`|\n|checkbox | 复选框 | `<input type=\"checkbox\" checked=\"checked\"  />`|\n| radio | 单选框 | `<input type=\"radio\"  />` |\n| submit | 提交按钮 | `<input type=\"submit\" value=\"提交\" />`|\n| hidden | 隐藏输入框	| `<input type=\"hidden\"  />` |\n| file | 文件选择框 | `<input type=\"file\"  />` |\n\n属性说明：\n\n> - name: 表单提交时的“键”，注意和id的区别\n> - value: 表单提交时对应项的值\n>       - type= \"button\", \"reset\", \"submit\"时，为按钮上显示的文本内容\n>       - type=\"text\",\"password\",\"hidden\"时，为输入框内的值\n>       - type=\"checkbox\", \"radio\", \"file\"，为输入相关联的值\n> - checked: radio和checkbox默认被选中的项\n> - readonly：text和password设置只读\n> - disabled：弃用，所有input均适用\n\n#### select标签\n\n```\n<form action=\"\" method=\"post\">\n  <select name=\"city\" id=\"city\">\n    <option value=\"1\">北京</option>\n    <option selected=\"selected\" value=\"2\">上海</option>\n    <option value=\"3\">广州</option>\n    <option value=\"4\">深圳</option>\n  </select>\n</form>\n```\n属性说明：\n\n> - multiple：布尔属性，设置后为多选，否则默认单选\n- disabled：禁用\n- selected：默认选中该项\n- value：定义提交时的选项值\n\n#### label标签\n`<`label`>` 标签为 input 元素定义标注（标记）。\n\n> **label 元素不会向用户呈现任何特殊效果。**\n`<`label`>` 标签的 **for 属性**值应当与相关元素的 **id 属性**值相同。\n\n```\n<form action=\"\">\n  <label for=\"username\">用户名</label>\n  <input type=\"text\" id=\"username\" name=\"username\">\n</form>\n```\n#### textarea多行文本\n\n```\n<textarea name=\"memo\" id=\"memo\" cols=\"30\" rows=\"10\">\n  默认内容\n</textarea>\n```\n属性说明：\n> - name：名称\n- rows：行数\n- cols：列数\n- disabled：禁用 ',38),(39,'menu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-newmenu-item-new',39),(40,'wwwwwwwwwwwaf',40),(41,'style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"\n    style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"style=\"margin: 20px 0; line-height: 3\"',41),(42,'eee',42),(43,'eee',43),(44,'eeees g  sgsg',44),(45,'ww',45),(46,'rrrrse  d ',46),(47,'sksks',47),(48,'skslll ',48),(49,'俄罗斯零零\n![](http://pdwd5ogz2.bkt.clouddn.com/u=798102781,3680638829&fm=26&gp=0.jpg)',49),(50,'```\n<form>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputFile\">File input</label>\n    <input type=\"file\" id=\"exampleInputFile\">\n    <p class=\"help-block\">Example block-level help text here.</p>\n  </div>\n  <div class=\"checkbox\">\n    <label>\n      <input type=\"checkbox\"> Check me out\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n</form>\n```',50),(54,'<form>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputFile\">File input</label>\n    <input type=\"file\" id=\"exampleInputFile\">\n    <p class=\"help-block\">Example block-level help text here.</p>\n  </div>\n  <div class=\"checkbox\">\n    <label>\n      <input type=\"checkbox\"> Check me out\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n</form>',54),(56,'Built-in template tags and filters¶\nThis document describes Django’s built-in template tags and filters. It is recommended that you use the automatic documentation, if available, as this will also include documentation for any custom tags or filters installed.\n\nBuilt-in tag reference¶\nautoescape¶\nControls the current auto-escaping behavior. This tag takes either on or off as an argument and that determines whether auto-escaping is in effect inside the block. The block is closed with an endautoescape ending tag.\n\nWhen auto-escaping is in effect, all variable content has HTML escaping applied to it before placing the result into the output (but after any filters have been applied). This is equivalent to manually applying the escape filter to each variable.\n\nThe only exceptions are variables that are already marked as “safe” from escaping, either by the code that populated the variable, or because it has had the safe or escape filters applied.\n\nSample usage:\n\n{% autoescape on %}\n    {{ body }}\n{% endautoescape %}\nblock¶\nDefines a block that can be overridden by child templates. See Template inheritance for more information.\n\ncomment¶\nIgnores everything between {% comment %} and {% endcomment %}. An optional note may be inserted in the first tag. For example, this is useful when commenting out code for documenting why the code was disabled.\n\nSample usage:\n\n<p>Rendered text with {{ pub_date|date:\"c\" }}</p>\n{% comment \"Optional note\" %}\n    <p>Commented out text with {{ create_date|date:\"c\" }}</p>\n{% endcomment %}\ncomment tags cannot be nested.\n\ncsrf_token¶\nThis tag is used for CSRF protection, as described in the documentation for Cross Site Request Forgeries.\n\ncycle¶\nProduces one of its arguments each time this tag is encountered. The first argument is produced on the first encounter, the second argument on the second encounter, and so forth. Once all arguments are exhausted, the tag cycles to the first argument and produces it again.\n\nThis tag is particularly useful in a loop:\n\n{% for o in some_list %}\n    <tr class=\"{% cycle \'row1\' \'row2\' %}\">\n        ...\n    </tr>\n{% endfor %}\nThe first iteration produces HTML that refers to class row1, the second to row2, the third to row1 again, and so on for each iteration of the loop.\n\nYou can use variables, too. For example, if you have two template variables, rowvalue1 and rowvalue2, you can alternate between their values like this:\n\n{% for o in some_list %}\n    <tr class=\"{% cycle rowvalue1 rowvalue2 %}\">\n        ...\n    </tr>\n{% endfor %}\nVariables included in the cycle will be escaped. You can disable auto-escaping with:\n\n{% for o in some_list %}\n    <tr class=\"{% autoescape off %}{% cycle rowvalue1 rowvalue2 %}{% endautoescape %}\">\n        ...\n    </tr>\n{% endfor %}\nYou can mix variables and strings:\n\n{% for o in some_list %}\n    <tr class=\"{% cycle \'row1\' rowvalue2 \'row3\' %}\">\n        ...\n    </tr>\n{% endfor %}\nIn some cases you might want to refer to the current value of a cycle without advancing to the next value. To do this, just give the {% cycle %} tag a name, using “as”, like this:\n\n{% cycle \'row1\' \'row2\' as rowcolors %}\nFrom then on, you can insert the current value of the cycle wherever you’d like in your template by referencing the cycle name as a context variable. If you want to move the cycle to the next value independently of the original cycle tag, you can use another cycle tag and specify the name of the variable. So, the following template:\n\n<tr>\n    <td class=\"{% cycle \'row1\' \'row2\' as rowcolors %}\">...</td>\n    <td class=\"{{ rowcolors }}\">...</td>\n</tr>\n<tr>\n    <td class=\"{% cycle rowcolors %}\">...</td>\n    <td class=\"{{ rowcolors }}\">...</td>\n</tr>\nwould output:\n\n<tr>\n    <td class=\"row1\">...</td>\n    <td class=\"row1\">...</td>\n</tr>\n<tr>\n    <td class=\"row2\">...</td>\n    <td class=\"row2\">...</td>\n</tr>\nYou can use any number of values in a cycle tag, separated by spaces. Values enclosed in single quotes (\') or double quotes (\") are treated as string literals, while values without quotes are treated as template variables.\n\nBy default, when you use the as keyword with the cycle tag, the usage of {% cycle %} that initiates the cycle will itself produce the first value in the cycle. This could be a problem if you want to use the value in a nested loop or an included template. If you only want to declare the cycle but not produce the first value, you can add a silent keyword as the last keyword in the tag. For example:\n\n{% for obj in some_list %}\n    {% cycle \'row1\' \'row2\' as rowcolors silent %}\n    <tr class=\"{{ rowcolors }}\">{% include \"subtemplate.html\" %}</tr>\n{% endfor %}\nThis will output a list of <tr> elements with class alternating between row1 and row2. The subtemplate will have access to rowcolors in its context and the value will match the class of the <tr> that encloses it. If the silent keyword were to be omitted, row1 and row2 would be emitted as normal text, outside the <tr> element.\n\nWhen the silent keyword is used on a cycle definition, the silence automatically applies to all subsequent uses of that specific cycle tag. The following template would output nothing, even though the second call to {% cycle %} doesn’t specify silent:\n\n{% cycle \'row1\' \'row2\' as rowcolors silent %}\n{% cycle rowcolors %}\nYou can use the resetcycle tag to make a {% cycle %} tag restart from its first value when it’s next encountered.\n\ndebug¶\nOutputs a whole load of debugging information, including the current context and imported modules.\n\nextends¶\nSignals that this template extends a parent template.\n\nThis tag can be used in two ways:\n\n{% extends \"base.html\" %} (with quotes) uses the literal value \"base.html\" as the name of the parent template to extend.\n{% extends variable %} uses the value of variable. If the variable evaluates to a string, Django will use that string as the name of the parent template. If the variable evaluates to a Template object, Django will use that object as the parent template.\nSee Template inheritance for more information.\n\nNormally the template name is relative to the template loader’s root directory. A string argument may also be a relative path starting with ./ or ../. For example, assume the following directory structure:\n\ndir1/\n    template.html\n    base2.html\n    my/\n        base3.html\nbase1.html\nIn template.html, the following paths would be valid:\n\n{% extends \"./base2.html\" %}\n{% extends \"../base1.html\" %}\n{% extends \"./my/base3.html\" %}\nNew in Django 1.10:\nThe ability to use relative paths was added.\n\nfilter¶\nFilters the contents of the block through one or more filters. Multiple filters can be specified with pipes and filters can have arguments, just as in variable syntax.\n\nNote that the block includes all the text between the filter and endfilter tags.\n\nSample usage:\n\n{% filter force_escape|lower %}\n    This text will be HTML-escaped, and will appear in all lowercase.\n{% endfilter %}\nNote\n\nThe escape and safe filters are not acceptable arguments. Instead, use the autoescape tag to manage autoescaping for blocks of template code.\n\nfirstof¶\nOutputs the first argument variable that is not False. Outputs nothing if all the passed variables are False.\n\nSample usage:\n\n{% firstof var1 var2 var3 %}\nThis is equivalent to:\n\n{% if var1 %}\n    {{ var1 }}\n{% elif var2 %}\n    {{ var2 }}\n{% elif var3 %}\n    {{ var3 }}\n{% endif %}\nYou can also use a literal string as a fallback value in case all passed variables are False:\n\n{% firstof var1 var2 var3 \"fallback value\" %}\nThis tag auto-escapes variable values. You can disable auto-escaping with:\n\n{% autoescape off %}\n    {% firstof var1 var2 var3 \"<strong>fallback value</strong>\" %}\n{% endautoescape %}\nOr if only some variables should be escaped, you can use:\n\n{% firstof var1 var2|safe var3 \"<strong>fallback value</strong>\"|safe %}\nYou can use the syntax {% firstof var1 var2 var3 as value %} to store the output inside a variable.\n\nfor¶\nLoops over each item in an array, making the item available in a context variable. For example, to display a list of athletes provided in athlete_list:\n\n<ul>\n{% for athlete in athlete_list %}\n    <li>{{ athlete.name }}</li>\n{% endfor %}\n</ul>\nYou can loop over a list in reverse by using {% for obj in list reversed %}.\n\nIf you need to loop over a list of lists, you can unpack the values in each sublist into individual variables. For example, if your context contains a list of (x,y) coordinates called points, you could use the following to output the list of points:\n\n{% for x, y in points %}\n    There is a point at {{ x }},{{ y }}\n{% endfor %}\nThis can also be useful if you need to access the items in a dictionary. For example, if your context contained a dictionary data, the following would display the keys and values of the dictionary:\n\n{% for key, value in data.items %}\n    {{ key }}: {{ value }}\n{% endfor %}\nKeep in mind that for the dot operator, dictionary key lookup takes precedence over method lookup. Therefore if the data dictionary contains a key named \'items\', data.items will return data[\'items\'] instead of data.items(). Avoid adding keys that are named like dictionary methods if you want to use those methods in a template (items, values, keys, etc.). Read more about the lookup order of the dot operator in the documentation of template variables.\n\nThe for loop sets a number of variables available within the loop:\n\nVariable	Description\nforloop.counter	The current iteration of the loop (1-indexed)\nforloop.counter0	The current iteration of the loop (0-indexed)\nforloop.revcounter	The number of iterations from the end of the loop (1-indexed)\nforloop.revcounter0	The number of iterations from the end of the loop (0-indexed)\nforloop.first	True if this is the first time through the loop\nforloop.last	True if this is the last time through the loop\nforloop.parentloop	For nested loops, this is the loop surrounding the current one\nfor … empty¶\nThe for tag can take an optional {% empty %} clause whose text is displayed if the given array is empty or could not be found:\n\n<ul>\n{% for athlete in athlete_list %}\n    <li>{{ athlete.name }}</li>\n{% empty %}\n    <li>Sorry, no athletes in this list.</li>\n{% endfor %}\n</ul>\nThe above is equivalent to – but shorter, cleaner, and possibly faster than – the following:\n\n<ul>\n  {% if athlete_list %}\n    {% for athlete in athlete_list %}\n      <li>{{ athlete.name }}</li>\n    {% endfor %}\n  {% else %}\n    <li>Sorry, no athletes in this list.</li>\n  {% endif %}\n</ul>\nif¶\nThe {% if %} tag evaluates a variable, and if that variable is “true” (i.e. exists, is not empty, and is not a false boolean value) the contents of the block are output:\n\n{% if athlete_list %}\n    Number of athletes: {{ athlete_list|length }}\n{% elif athlete_in_locker_room_list %}\n    Athletes should be out of the locker room soon!\n{% else %}\n    No athletes.\n{% endif %}\nIn the above, if athlete_list is not empty, the number of athletes will be displayed by the {{ athlete_list|length }} variable.\n\nAs you can see, the if tag may take one or several {% elif %} clauses, as well as an {% else %} clause that will be displayed if all previous conditions fail. These clauses are optional.\n\nBoolean operators¶\nif tags may use and, or or not to test a number of variables or to negate a given variable:\n\n{% if athlete_list and coach_list %}\n    Both athletes and coaches are available.\n{% endif %}\n\n{% if not athlete_list %}\n    There are no athletes.\n{% endif %}\n\n{% if athlete_list or coach_list %}\n    There are some athletes or some coaches.\n{% endif %}\n\n{% if not athlete_list or coach_list %}\n    There are no athletes or there are some coaches.\n{% endif %}\n\n{% if athlete_list and not coach_list %}\n    There are some athletes and absolutely no coaches.\n{% endif %}\nUse of both and and or clauses within the same tag is allowed, with and having higher precedence than or e.g.:\n\n{% if athlete_list and coach_list or cheerleader_list %}\nwill be interpreted like:\n\nif (athlete_list and coach_list) or cheerleader_list\nUse of actual parentheses in the if tag is invalid syntax. If you need them to indicate precedence, you should use nested if tags.\n\nif tags may also use the operators ==, !=, <, >, <=, >=, in, not in, is, and is not which work as follows:\n\n== operator¶\nEquality. Example:\n\n{% if somevar == \"x\" %}\n  This appears if variable somevar equals the string \"x\"\n{% endif %}\n!= operator¶\nInequality. Example:\n\n{% if somevar != \"x\" %}\n  This appears if variable somevar does not equal the string \"x\",\n  or if somevar is not found in the context\n{% endif %}\n< operator¶\nLess than. Example:\n\n{% if somevar < 100 %}\n  This appears if variable somevar is less than 100.\n{% endif %}\n> operator¶\nGreater than. Example:\n\n{% if somevar > 0 %}\n  This appears if variable somevar is greater than 0.\n{% endif %}\n<= operator¶\nLess than or equal to. Example:\n\n{% if somevar <= 100 %}\n  This appears if variable somevar is less than 100 or equal to 100.\n{% endif %}\n>= operator¶\nGreater than or equal to. Example:\n\n{% if somevar >= 1 %}\n  This appears if variable somevar is greater than 1 or equal to 1.\n{% endif %}\nin operator¶\nContained within. This operator is supported by many Python containers to test whether the given value is in the container. The following are some examples of how x in y will be interpreted:\n\n{% if \"bc\" in \"abcdef\" %}\n  This appears since \"bc\" is a substring of \"abcdef\"\n{% endif %}\n\n{% if \"hello\" in greetings %}\n  If greetings is a list or set, one element of which is the string\n  \"hello\", this will appear.\n{% endif %}\n\n{% if user in users %}\n  If users is a QuerySet, this will appear if user is an\n  instance that belongs to the QuerySet.\n{% endif %}\nnot in operator¶\nNot contained within. This is the negation of the in operator.\n\nis operator¶\nNew in Django 1.10.\nObject identity. Tests if two values are the same object. Example:\n\n{% if somevar is True %}\n  This appears if and only if somevar is True.\n{% endif %}\n\n{% if somevar is None %}\n  This appears if somevar is None, or if somevar is not found in the context.\n{% endif %}\nis not operator¶\nNew in Django 1.10.\nNegated object identity. Tests if two values are not the same object. This is the negation of the is operator. Example:\n\n{% if somevar is not True %}\n  This appears if somevar is not True, or if somevar is not found in the\n  context.\n{% endif %}\n\n{% if somevar is not None %}\n  This appears if and only if somevar is not None.\n{% endif %}\nFilters¶\nYou can also use filters in the if expression. For example:\n\n{% if messages|length >= 100 %}\n   You have lots of messages today!\n{% endif %}\nComplex expressions¶\nAll of the above can be combined to form complex expressions. For such expressions, it can be important to know how the operators are grouped when the expression is evaluated - that is, the precedence rules. The precedence of the operators, from lowest to highest, is as follows:\n\nor\nand\nnot\nin\n==, !=, <, >, <=, >=\n(This follows Python exactly). So, for example, the following complex if tag:\n\n{% if a == b or c == d and e %}\n…will be interpreted as:\n\n(a == b) or ((c == d) and e)\nIf you need different precedence, you will need to use nested if tags. Sometimes that is better for clarity anyway, for the sake of those who do not know the precedence rules.\n\nThe comparison operators cannot be ‘chained’ like in Python or in mathematical notation. For example, instead of using:\n\n{% if a > b > c %}  (WRONG)\nyou should use:\n\n{% if a > b and b > c %}\nifequal and ifnotequal¶\n{% ifequal a b %} ... {% endifequal %} is an obsolete way to write {% if a == b %} ... {% endif %}. Likewise, {% ifnotequal a b %} ... {% endifnotequal %} is superseded by {% if a != b %} ... {% endif %}. The ifequal and ifnotequal tags will be deprecated in a future release.\n\nifchanged¶\nCheck if a value has changed from the last iteration of a loop.\n\nThe {% ifchanged %} block tag is used within a loop. It has two possible uses.\n\nChecks its own rendered contents against its previous state and only displays the content if it has changed. For example, this displays a list of days, only displaying the month if it changes:\n\n<h1>Archive for {{ year }}</h1>\n\n{% for date in days %}\n    {% ifchanged %}<h3>{{ date|date:\"F\" }}</h3>{% endifchanged %}\n    <a href=\"{{ date|date:\"M/d\"|lower }}/\">{{ date|date:\"j\" }}</a>\n{% endfor %}\nIf given one or more variables, check whether any variable has changed. For example, the following shows the date every time it changes, while showing the hour if either the hour or the date has changed:\n\n{% for date in days %}\n    {% ifchanged date.date %} {{ date.date }} {% endifchanged %}\n    {% ifchanged date.hour date.date %}\n        {{ date.hour }}\n    {% endifchanged %}\n{% endfor %}\nThe ifchanged tag can also take an optional {% else %} clause that will be displayed if the value has not changed:\n\n{% for match in matches %}\n    <div style=\"background-color:\n        {% ifchanged match.ballot_id %}\n            {% cycle \"red\" \"blue\" %}\n        {% else %}\n            gray\n        {% endifchanged %}\n    \">{{ match }}</div>\n{% endfor %}\ninclude¶\nLoads a template and renders it with the current context. This is a way of “including” other templates within a template.\n\nThe template name can either be a variable or a hard-coded (quoted) string, in either single or double quotes.\n\nThis example includes the contents of the template \"foo/bar.html\":\n\n{% include \"foo/bar.html\" %}\nNormally the template name is relative to the template loader’s root directory. A string argument may also be a relative path starting with ./ or ../ as described in the extends tag.\n\nNew in Django 1.10:\nThe ability to use a relative path was added.\n\nThis example includes the contents of the template whose name is contained in the variable template_name:\n\n{% include template_name %}\nThe variable may also be any object with a render() method that accepts a context. This allows you to reference a compiled Template in your context.\n\nAn included template is rendered within the context of the template that includes it. This example produces the output \"Hello, John!\":\n\nContext: variable person is set to \"John\" and variable greeting is set to \"Hello\".\n\nTemplate:\n\n{% include \"name_snippet.html\" %}\nThe name_snippet.html template:\n\n{{ greeting }}, {{ person|default:\"friend\" }}!\nYou can pass additional context to the template using keyword arguments:\n\n{% include \"name_snippet.html\" with person=\"Jane\" greeting=\"Hello\" %}\nIf you want to render the context only with the variables provided (or even no variables at all), use the only option. No other variables are available to the included template:\n\n{% include \"name_snippet.html\" with greeting=\"Hi\" only %}\nIf the included template causes an exception while it’s rendered (including if it’s missing or has syntax errors), the behavior varies depending on the template engine\'s debug option (if not set, this option defaults to the value of DEBUG). When debug mode is turned on, an exception like TemplateDoesNotExist or TemplateSyntaxError will be raised. When debug mode is turned off, {% include %} logs a warning to the django.template logger with the exception that happens while rendering the included template and returns an empty string.\n\nDeprecated since version 1.11:\nSilencing exceptions raised while rendering the {% include %} template tag is deprecated. In Django 2.1, the exception will be raised.\n\nNote\n\nThe include tag should be considered as an implementation of “render this subtemplate and include the HTML”, not as “parse this subtemplate and include its contents as if it were part of the parent”. This means that there is no shared state between included templates – each include is a completely independent rendering process.\n\nBlocks are evaluated before they are included. This means that a template that includes blocks from another will contain blocks that have already been evaluated and rendered - not blocks that can be overridden by, for example, an extending template.\n\nload¶\nLoads a custom template tag set.\n\nFor example, the following template would load all the tags and filters registered in somelibrary and otherlibrary located in package package:\n\n{% load somelibrary package.otherlibrary %}\nYou can also selectively load individual filters or tags from a library, using the from argument. In this example, the template tags/filters named foo and bar will be loaded from somelibrary:\n\n{% load foo bar from somelibrary %}\nSee Custom tag and filter libraries for more information.\n\nlorem¶\nDisplays random “lorem ipsum” Latin text. This is useful for providing sample data in templates.\n\nUsage:\n\n{% lorem [count] [method] [random] %}\nThe {% lorem %} tag can be used with zero, one, two or three arguments. The arguments are:\n\nArgument	Description\ncount	A number (or variable) containing the number of paragraphs or words to generate (default is 1).\nmethod	Either w for words, p for HTML paragraphs or b for plain-text paragraph blocks (default is b).\nrandom	The word random, which if given, does not use the common paragraph (“Lorem ipsum dolor sit amet…”) when generating text.\nExamples:\n\n{% lorem %} will output the common “lorem ipsum” paragraph.\n{% lorem 3 p %} will output the common “lorem ipsum” paragraph and two random paragraphs each wrapped in HTML <p> tags.\n{% lorem 2 w random %} will output two random Latin words.\nnow¶\nDisplays the current date and/or time, using a format according to the given string. Such string can contain format specifiers characters as described in the date filter section.\n\nExample:\n\nIt is {% now \"jS F Y H:i\" %}\nNote that you can backslash-escape a format string if you want to use the “raw” value. In this example, both “o” and “f” are backslash-escaped, because otherwise each is a format string that displays the year and the time, respectively:\n\nIt is the {% now \"jS \\o\\f F\" %}\nThis would display as “It is the 4th of September”.\n\nNote\n\nThe format passed can also be one of the predefined ones DATE_FORMAT, DATETIME_FORMAT, SHORT_DATE_FORMAT or SHORT_DATETIME_FORMAT. The predefined formats may vary depending on the current locale and if Format localization is enabled, e.g.:\n\nIt is {% now \"SHORT_DATETIME_FORMAT\" %}\nYou can also use the syntax {% now \"Y\" as current_year %} to store the output (as a string) inside a variable. This is useful if you want to use {% now %} inside a template tag like blocktrans for example:\n\n{% now \"Y\" as current_year %}\n{% blocktrans %}Copyright {{ current_year }}{% endblocktrans %}\nregroup¶\nRegroups a list of alike objects by a common attribute.\n\nThis complex tag is best illustrated by way of an example: say that cities is a list of cities represented by dictionaries containing \"name\", \"population\", and \"country\" keys:\n\ncities = [\n    {\'name\': \'Mumbai\', \'population\': \'19,000,000\', \'country\': \'India\'},\n    {\'name\': \'Calcutta\', \'population\': \'15,000,000\', \'country\': \'India\'},\n    {\'name\': \'New York\', \'population\': \'20,000,000\', \'country\': \'USA\'},\n    {\'name\': \'Chicago\', \'population\': \'7,000,000\', \'country\': \'USA\'},\n    {\'name\': \'Tokyo\', \'population\': \'33,000,000\', \'country\': \'Japan\'},\n]\n…and you’d like to display a hierarchical list that is ordered by country, like this:\n\nIndia\nMumbai: 19,000,000\nCalcutta: 15,000,000\nUSA\nNew York: 20,000,000\nChicago: 7,000,000\nJapan\nTokyo: 33,000,000\nYou can use the {% regroup %} tag to group the list of cities by country. The following snippet of template code would accomplish this:\n\n{% regroup cities by country as country_list %}\n\n<ul>\n{% for country in country_list %}\n    <li>{{ country.grouper }}\n    <ul>\n        {% for city in country.list %}\n          <li>{{ city.name }}: {{ city.population }}</li>\n        {% endfor %}\n    </ul>\n    </li>\n{% endfor %}\n</ul>\nLet’s walk through this example. {% regroup %} takes three arguments: the list you want to regroup, the attribute to group by, and the name of the resulting list. Here, we’re regrouping the cities list by the country attribute and calling the result country_list.\n\n{% regroup %} produces a list (in this case, country_list) of group objects. Group objects are instances of namedtuple() with two fields:\n\ngrouper – the item that was grouped by (e.g., the string “India” or “Japan”).\nlist – a list of all items in this group (e.g., a list of all cities with country=’India’).\nChanged in Django 1.11:\nThe group object was changed from a dictionary to a namedtuple().\n\nBecause {% regroup %} produces namedtuple() objects, you can also write the previous example as:\n\n{% regroup cities by country as country_list %}\n\n<ul>\n{% for country, local_cities in country_list %}\n    <li>{{ country }}\n    <ul>\n        {% for city in local_cities %}\n          <li>{{ city.name }}: {{ city.population }}</li>\n        {% endfor %}\n    </ul>\n    </li>\n{% endfor %}\n</ul>\nNote that {% regroup %} does not order its input! Our example relies on the fact that the cities list was ordered by country in the first place. If the cities list did not order its members by country, the regrouping would naively display more than one group for a single country. For example, say the cities list was set to this (note that the countries are not grouped together):\n\ncities = [\n    {\'name\': \'Mumbai\', \'population\': \'19,000,000\', \'country\': \'India\'},\n    {\'name\': \'New York\', \'population\': \'20,000,000\', \'country\': \'USA\'},\n    {\'name\': \'Calcutta\', \'population\': \'15,000,000\', \'country\': \'India\'},\n    {\'name\': \'Chicago\', \'population\': \'7,000,000\', \'country\': \'USA\'},\n    {\'name\': \'Tokyo\', \'population\': \'33,000,000\', \'country\': \'Japan\'},\n]\nWith this input for cities, the example {% regroup %} template code above would result in the following output:\n\nIndia\nMumbai: 19,000,000\nUSA\nNew York: 20,000,000\nIndia\nCalcutta: 15,000,000\nUSA\nChicago: 7,000,000\nJapan\nTokyo: 33,000,000\nThe easiest solution to this gotcha is to make sure in your view code that the data is ordered according to how you want to display it.\n\nAnother solution is to sort the data in the template using the dictsort filter, if your data is in a list of dictionaries:\n\n{% regroup cities|dictsort:\"country\" by country as country_list %}\nGrouping on other properties¶\nAny valid template lookup is a legal grouping attribute for the regroup tag, including methods, attributes, dictionary keys and list items. For example, if the “country” field is a foreign key to a class with an attribute “description,” you could use:\n\n{% regroup cities by country.description as country_list %}\nOr, if country is a field with choices, it will have a get_FOO_display() method available as an attribute, allowing you to group on the display string rather than the choices key:\n\n{% regroup cities by get_country_display as country_list %}\n{{ country.grouper }} will now display the value fields from the choices set rather than the keys.\n\nresetcycle¶\nNew in Django 1.11.\nResets a previous cycle so that it restarts from its first item at its next encounter. Without arguments, {% resetcycle %} will reset the last {% cycle %} defined in the template.\n\nExample usage:\n\n{% for coach in coach_list %}\n    <h1>{{ coach.name }}</h1>\n    {% for athlete in coach.athlete_set.all %}\n        <p class=\"{% cycle \'odd\' \'even\' %}\">{{ athlete.name }}</p>\n    {% endfor %}\n    {% resetcycle %}\n{% endfor %}\nThis example would return this HTML:\n\n<h1>José Mourinho</h1>\n<p class=\"odd\">Thibaut Courtois</p>\n<p class=\"even\">John Terry</p>\n<p class=\"odd\">Eden Hazard</p>\n\n<h1>Carlo Ancelotti</h1>\n<p class=\"odd\">Manuel Neuer</p>\n<p class=\"even\">Thomas Müller</p>\nNotice how the first block ends with class=\"odd\" and the new one starts with class=\"odd\". Without the {% resetcycle %} tag, the second block would start with class=\"even\".\n\nYou can also reset named cycle tags:\n\n{% for item in list %}\n    <p class=\"{% cycle \'odd\' \'even\' as stripe %} {% cycle \'major\' \'minor\' \'minor\' \'minor\' \'minor\' as tick %}\">\n        {{ item.data }}\n    </p>\n    {% ifchanged item.category %}\n        <h1>{{ item.category }}</h1>\n        {% if not forloop.first %}{% resetcycle tick %}{% endif %}\n    {% endifchanged %}\n{% endfor %}\nIn this example, we have both the alternating odd/even rows and a “major” row every fifth row. Only the five-row cycle is reset when a category changes.\n\nspaceless¶\nRemoves whitespace between HTML tags. This includes tab characters and newlines.\n\nExample usage:\n\n{% spaceless %}\n    <p>\n        <a href=\"foo/\">Foo</a>\n    </p>\n{% endspaceless %}\nThis example would return this HTML:\n\n<p><a href=\"foo/\">Foo</a></p>\nOnly space between tags is removed – not space between tags and text. In this example, the space around Hello won’t be stripped:\n\n{% spaceless %}\n    <strong>\n        Hello\n    </strong>\n{% endspaceless %',56);
/*!40000 ALTER TABLE `blog_articledetail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_articleupdown`
--

DROP TABLE IF EXISTS `blog_articleupdown`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_articleupdown` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `is_up` tinyint(1) NOT NULL,
  `article_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `blog_articleupdown_article_id_user_id_fa3d0c08_uniq` (`article_id`,`user_id`),
  KEY `blog_articleupdown_user_id_2c0ebe49_fk_blog_userinfo_nid` (`user_id`),
  CONSTRAINT `blog_articleupdown_article_id_9be1a8a2_fk_blog_article_nid` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`nid`),
  CONSTRAINT `blog_articleupdown_user_id_2c0ebe49_fk_blog_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_articleupdown`
--

LOCK TABLES `blog_articleupdown` WRITE;
/*!40000 ALTER TABLE `blog_articleupdown` DISABLE KEYS */;
/*!40000 ALTER TABLE `blog_articleupdown` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_blog`
--

DROP TABLE IF EXISTS `blog_blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_blog` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(64) NOT NULL,
  `site` varchar(32) NOT NULL,
  `theme` varchar(32) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `site` (`site`),
  UNIQUE KEY `user_id` (`user_id`),
  CONSTRAINT `blog_blog_user_id_0e1a17e5_fk_blog_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_blog`
--

LOCK TABLES `blog_blog` WRITE;
/*!40000 ALTER TABLE `blog_blog` DISABLE KEYS */;
INSERT INTO `blog_blog` VALUES (1,'wmm的博客','wmm','white',2),(2,'lee的博客','lee','black',1);
/*!40000 ALTER TABLE `blog_blog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_category`
--

DROP TABLE IF EXISTS `blog_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_category` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(32) NOT NULL,
  `blog_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `blog_category_blog_id_80f0723a_fk_blog_blog_nid` (`blog_id`),
  CONSTRAINT `blog_category_blog_id_80f0723a_fk_blog_blog_nid` FOREIGN KEY (`blog_id`) REFERENCES `blog_blog` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_category`
--

LOCK TABLES `blog_category` WRITE;
/*!40000 ALTER TABLE `blog_category` DISABLE KEYS */;
INSERT INTO `blog_category` VALUES (1,'python',2),(2,'markdown',2),(3,'test',2),(4,'sss',2),(5,'eefe fw',2),(9,'django',2);
/*!40000 ALTER TABLE `blog_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_comment`
--

DROP TABLE IF EXISTS `blog_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_comment` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `content` varchar(256) NOT NULL,
  `create_time` datetime(6) NOT NULL,
  `article_id` int(11) NOT NULL,
  `parent_comment_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `blog_comment_article_id_3d58bca6_fk_blog_article_nid` (`article_id`),
  KEY `blog_comment_parent_comment_id_26791b9a_fk_blog_comment_nid` (`parent_comment_id`),
  KEY `blog_comment_user_id_59a54155_fk_blog_userinfo_nid` (`user_id`),
  CONSTRAINT `blog_comment_article_id_3d58bca6_fk_blog_article_nid` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`nid`),
  CONSTRAINT `blog_comment_parent_comment_id_26791b9a_fk_blog_comment_nid` FOREIGN KEY (`parent_comment_id`) REFERENCES `blog_comment` (`nid`),
  CONSTRAINT `blog_comment_user_id_59a54155_fk_blog_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_comment`
--

LOCK TABLES `blog_comment` WRITE;
/*!40000 ALTER TABLE `blog_comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `blog_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_tag`
--

DROP TABLE IF EXISTS `blog_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_tag` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(32) NOT NULL,
  `blog_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `blog_tag_blog_id_a8c60c42_fk_blog_blog_nid` (`blog_id`),
  CONSTRAINT `blog_tag_blog_id_a8c60c42_fk_blog_blog_nid` FOREIGN KEY (`blog_id`) REFERENCES `blog_blog` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_tag`
--

LOCK TABLES `blog_tag` WRITE;
/*!40000 ALTER TABLE `blog_tag` DISABLE KEYS */;
INSERT INTO `blog_tag` VALUES (1,'python',2),(2,'后端',2),(3,'linux',2),(4,'面试',2),(25,'可是可是',2),(26,'ppop',2),(27,'py',1),(28,'HTML',1),(29,'go',1),(30,'啦啦啦',1),(31,'急啊急啊就',1),(32,'kkk',1),(33,'kskk',1),(34,'Django',2);
/*!40000 ALTER TABLE `blog_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_userinfo`
--

DROP TABLE IF EXISTS `blog_userinfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_userinfo` (
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(30) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `phone` varchar(11) DEFAULT NULL,
  `avatar` varchar(100) NOT NULL,
  `reg_time` datetime(6) NOT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `phone` (`phone`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_userinfo`
--

LOCK TABLES `blog_userinfo` WRITE;
/*!40000 ALTER TABLE `blog_userinfo` DISABLE KEYS */;
INSERT INTO `blog_userinfo` VALUES ('pbkdf2_sha256$36000$4pPCyfE0sDo4$y4j5r3sMxdlF9TL09Rsh6K6DQ0knQ9JArd/S1ZfSpJw=','2018-08-29 04:53:46.647761',1,'lee','','','dev-l@outlook.com',1,1,'2018-08-25 01:58:04.650126',1,NULL,'avatars/default.png','2018-08-25 01:58:04.703533'),('pbkdf2_sha256$36000$lKIE7kCuyGQ2$Mo6XSX0+hZbB3vYg4NdikmAV9lVrTQ+01QBJi3Qbizk=','2018-08-29 03:33:01.770162',0,'wmm','','','wmm@qq.com',0,1,'2018-08-25 02:01:47.754955',2,NULL,'avatars/004.jpg','2018-08-25 02:01:47.864945'),('pbkdf2_sha256$36000$9Tk82jQtL7uk$UsiF+6fq+0wbS8RwsBxUfg2fdI/7wtTKmlEVR3nCBYU=',NULL,0,'lee2','','','111111@qq.com',0,1,'2018-08-25 15:23:09.494853',3,NULL,'avatars/004.jpg','2018-08-25 15:23:09.641853');
/*!40000 ALTER TABLE `blog_userinfo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_userinfo_groups`
--

DROP TABLE IF EXISTS `blog_userinfo_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_userinfo_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userinfo_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_userinfo_groups_userinfo_id_group_id_5f60ecec_uniq` (`userinfo_id`,`group_id`),
  KEY `blog_userinfo_groups_group_id_1fb5e93a_fk_auth_group_id` (`group_id`),
  CONSTRAINT `blog_userinfo_groups_group_id_1fb5e93a_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `blog_userinfo_groups_userinfo_id_f6f0498b_fk_blog_userinfo_nid` FOREIGN KEY (`userinfo_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_userinfo_groups`
--

LOCK TABLES `blog_userinfo_groups` WRITE;
/*!40000 ALTER TABLE `blog_userinfo_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `blog_userinfo_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_userinfo_user_permissions`
--

DROP TABLE IF EXISTS `blog_userinfo_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_userinfo_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userinfo_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_userinfo_user_permi_userinfo_id_permission_i_7d343093_uniq` (`userinfo_id`,`permission_id`),
  KEY `blog_userinfo_user_p_permission_id_ace80f7e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `blog_userinfo_user_p_permission_id_ace80f7e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `blog_userinfo_user_p_userinfo_id_57e76697_fk_blog_user` FOREIGN KEY (`userinfo_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_userinfo_user_permissions`
--

LOCK TABLES `blog_userinfo_user_permissions` WRITE;
/*!40000 ALTER TABLE `blog_userinfo_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `blog_userinfo_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_blog_userinfo_nid` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_blog_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=85 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2018-08-25 02:05:09.989460','1','wmm的博客',1,'[{\"added\": {}}]',11,1),(2,'2018-08-25 02:05:20.246380','2','lee的博客',1,'[{\"added\": {}}]',11,1),(3,'2018-08-25 02:06:08.323245','1','python',1,'[{\"added\": {}}]',12,1),(4,'2018-08-25 02:06:29.235836','1','细说Django的admin',1,'[{\"added\": {}}]',7,1),(5,'2018-08-25 02:07:03.287701','2','markdown',1,'[{\"added\": {}}]',12,1),(6,'2018-08-25 02:07:21.267165','2','Markdown编辑器editormd使用过程中的坑希望你不会遇到',1,'[{\"added\": {}}]',7,1),(7,'2018-08-25 02:08:24.760149','1','python',1,'[{\"added\": {}}]',14,1),(8,'2018-08-25 02:08:31.730291','2','后端',1,'[{\"added\": {}}]',14,1),(9,'2018-08-25 02:08:37.115932','3','linux',1,'[{\"added\": {}}]',14,1),(10,'2018-08-25 02:08:41.644531','4','面试',1,'[{\"added\": {}}]',14,1),(11,'2018-08-25 02:14:27.376372','1','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(12,'2018-08-25 02:14:57.923040','2','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(13,'2018-08-25 09:49:53.990252','3','Django时区问题之——Database returned an invalid datetime value',1,'[{\"added\": {}}]',7,1),(14,'2018-08-25 09:50:17.707352','3','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(15,'2018-08-26 14:37:25.218337','4','Django学习笔记3——Django模板系统',1,'[{\"added\": {}}]',7,1),(16,'2018-08-26 14:37:28.059172','4','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(17,'2018-08-26 14:41:45.568930','5','Ajax学习',1,'[{\"added\": {}}]',7,1),(18,'2018-08-26 14:41:48.900724','5','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(19,'2018-08-26 14:50:06.219522','6','editormd的使用',1,'[{\"added\": {}}]',7,1),(20,'2018-08-26 14:50:07.911422','6','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(21,'2018-08-27 03:09:53.656834','3','test',1,'[{\"added\": {}}]',12,1),(22,'2018-08-27 03:09:56.463828','7','test1',1,'[{\"added\": {}}]',7,1),(23,'2018-08-27 03:09:58.317827','7','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(24,'2018-08-27 03:10:20.356788','8','test2',1,'[{\"added\": {}}]',7,1),(25,'2018-08-27 03:10:21.804779','8','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(26,'2018-08-27 03:10:40.750744','9','test3',1,'[{\"added\": {}}]',7,1),(27,'2018-08-27 03:10:42.205741','9','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(28,'2018-08-27 03:10:57.818713','10','test4',1,'[{\"added\": {}}]',7,1),(29,'2018-08-27 03:10:58.718710','10','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(30,'2018-08-27 03:11:14.195684','11','test5',1,'[{\"added\": {}}]',7,1),(31,'2018-08-27 03:11:14.929676','11','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(32,'2018-08-27 03:11:31.121650','12','test6',1,'[{\"added\": {}}]',7,1),(33,'2018-08-27 03:11:32.385643','12','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(34,'2018-08-27 03:11:44.123625','13','test7',1,'[{\"added\": {}}]',7,1),(35,'2018-08-27 03:11:44.931625','13','ArticleDetail object',1,'[{\"added\": {}}]',9,1),(36,'2018-08-27 07:04:51.687563','5','Article2Tag object',1,'[{\"added\": {}}]',8,1),(37,'2018-08-27 07:04:59.580564','6','Article2Tag object',1,'[{\"added\": {}}]',8,1),(38,'2018-08-28 09:09:19.923283','16','python',3,'',7,1),(39,'2018-08-28 09:09:20.077283','15','python',3,'',7,1),(40,'2018-08-28 10:20:27.591015','29','python',3,'',7,1),(41,'2018-08-28 10:20:27.680018','28','python',3,'',7,1),(42,'2018-08-28 10:20:27.724032','27','python',3,'',7,1),(43,'2018-08-28 10:20:27.768013','26','python',3,'',7,1),(44,'2018-08-28 10:20:27.802012','25','python',3,'',7,1),(45,'2018-08-28 10:20:27.968011','24','python',3,'',7,1),(46,'2018-08-28 10:20:28.047016','23','lee的博客',3,'',7,1),(47,'2018-08-28 10:20:28.102013','22','python',3,'',7,1),(48,'2018-08-28 10:20:28.169015','21','python',3,'',7,1),(49,'2018-08-28 10:20:28.257013','20','python',3,'',7,1),(50,'2018-08-28 10:20:28.302013','19','python',3,'',7,1),(51,'2018-08-28 10:20:28.390011','18','lee的博客',3,'',7,1),(52,'2018-08-28 10:20:28.435013','17','python',3,'',7,1),(53,'2018-08-28 10:20:28.480014','14','前端学习之HTML',3,'',7,1),(54,'2018-08-28 11:48:53.725705','37','python',3,'',7,1),(55,'2018-08-28 11:48:53.826704','36','python',3,'',7,1),(56,'2018-08-28 11:48:53.870704','35','python',3,'',7,1),(57,'2018-08-28 11:48:53.915711','34','python',3,'',7,1),(58,'2018-08-28 11:48:53.959706','33','python',3,'',7,1),(59,'2018-08-28 11:48:54.004704','32','python',3,'',7,1),(60,'2018-08-28 11:48:54.048704','31','python',3,'',7,1),(61,'2018-08-28 11:48:54.093705','30','python',3,'',7,1),(62,'2018-08-29 03:01:11.485970','24',']',3,'',14,1),(63,'2018-08-29 03:01:11.585970','23','\"',3,'',14,1),(64,'2018-08-29 03:01:11.651970','22','是',3,'',14,1),(65,'2018-08-29 03:01:11.707971','21','不',3,'',14,1),(66,'2018-08-29 03:01:11.795970','20','是',3,'',14,1),(67,'2018-08-29 03:01:11.829968','19','不',3,'',14,1),(68,'2018-08-29 03:01:11.873970','18','\"',3,'',14,1),(69,'2018-08-29 03:01:11.907970','17',',',3,'',14,1),(70,'2018-08-29 03:01:11.951972','16','\"',3,'',14,1),(71,'2018-08-29 03:01:12.085969','15','o',3,'',14,1),(72,'2018-08-29 03:01:12.118969','14','g',3,'',14,1),(73,'2018-08-29 03:01:12.152969','13','\"',3,'',14,1),(74,'2018-08-29 03:01:12.206968','12',',',3,'',14,1),(75,'2018-08-29 03:01:12.251972','11','\"',3,'',14,1),(76,'2018-08-29 03:01:12.284970','10','r',3,'',14,1),(77,'2018-08-29 03:01:12.318972','9',' ',3,'',14,1),(78,'2018-08-29 03:01:12.362969','8','r',3,'',14,1),(79,'2018-08-29 03:01:12.396969','7','r',3,'',14,1),(80,'2018-08-29 03:01:12.428968','6','\"',3,'',14,1),(81,'2018-08-29 03:01:12.462969','5','[',3,'',14,1),(82,'2018-08-29 15:09:24.538129','8','new',3,'',12,1),(83,'2018-08-29 15:09:24.683128','7','wmm2',3,'',12,1),(84,'2018-08-29 15:09:24.728129','6','wmm',3,'',12,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(7,'blog','article'),(8,'blog','article2tag'),(9,'blog','articledetail'),(10,'blog','articleupdown'),(11,'blog','blog'),(12,'blog','category'),(13,'blog','comment'),(14,'blog','tag'),(6,'blog','userinfo'),(4,'contenttypes','contenttype'),(5,'sessions','session');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2018-08-25 01:51:07.848341'),(2,'contenttypes','0002_remove_content_type_name','2018-08-25 01:51:09.770340'),(3,'auth','0001_initial','2018-08-25 01:51:16.793345'),(4,'auth','0002_alter_permission_name_max_length','2018-08-25 01:51:18.365342'),(5,'auth','0003_alter_user_email_max_length','2018-08-25 01:51:18.427344'),(6,'auth','0004_alter_user_username_opts','2018-08-25 01:51:18.487344'),(7,'auth','0005_alter_user_last_login_null','2018-08-25 01:51:18.542343'),(8,'auth','0006_require_contenttypes_0002','2018-08-25 01:51:18.598346'),(9,'auth','0007_alter_validators_add_error_messages','2018-08-25 01:51:18.664342'),(10,'auth','0008_alter_user_username_max_length','2018-08-25 01:51:18.740341'),(11,'blog','0001_initial','2018-08-25 01:51:52.846308'),(12,'admin','0001_initial','2018-08-25 01:51:55.465976'),(13,'admin','0002_logentry_remove_auto_add','2018-08-25 01:51:55.533974'),(14,'sessions','0001_initial','2018-08-25 01:51:57.315804'),(15,'blog','0002_auto_20180825_1025','2018-08-25 02:26:06.305850');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('2l7oh42ob9261u1e0vv1cjan3d3o7kxn','ZmMyY2Y0YjQ0OGExNDM4OTVmNWVhOTU1N2ZkMzQzNTI2ZWIzMGU2YTp7Imd0X3NlcnZlcl9zdGF0dXMiOjEsInVzZXJfaWQiOiIifQ==','2018-09-11 04:00:59.808733'),('bpvne9x8ws0xsau2h1748ysgu8h2hrbx','ZmMyY2Y0YjQ0OGExNDM4OTVmNWVhOTU1N2ZkMzQzNTI2ZWIzMGU2YTp7Imd0X3NlcnZlcl9zdGF0dXMiOjEsInVzZXJfaWQiOiIifQ==','2018-09-12 04:17:11.861978'),('k357vcpl0p9r9bdrx7tabwuk006ik1jh','ODMxNjEwMTA4MjMwMGQ2N2ZlODdiYjk0ZjFmZWJkNGFjYTBiMjI5Mjp7Imd0X3NlcnZlcl9zdGF0dXMiOjEsInVzZXJfaWQiOiIiLCJfYXV0aF91c2VyX2lkIjoiMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiYzhhYjllOTU2NWU1YWYzODZkMDExYTQ1MTgwNTJjNmY0M2Q1YzQ0YSJ9','2018-09-12 03:33:01.914858'),('lqpjqqi7jtgy2ia2i19vgpy4xx6e59bp','NjAwOGQ3ZGYyMzI1ZWVmYmFjMmUzZGEwYmVhYTQzMmY0ZDc5ZmI4Yzp7Imd0X3NlcnZlcl9zdGF0dXMiOjEsInVzZXJfaWQiOiIiLCJfYXV0aF91c2VyX2lkIjoiMSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiNTc3ZGVjYTlmOTczYjMyNDgwYzBiZTcwZTJhZjRlOTljNDU5YTUzZSJ9','2018-09-12 04:54:01.558465'),('oupp5wu0azsmfnr9k3c539hrv03hlout','ZmMyY2Y0YjQ0OGExNDM4OTVmNWVhOTU1N2ZkMzQzNTI2ZWIzMGU2YTp7Imd0X3NlcnZlcl9zdGF0dXMiOjEsInVzZXJfaWQiOiIifQ==','2018-09-11 04:04:32.239246'),('pd1f3y36i5ea9mibnfwp1mmer3h76dgr','ZjViMmYyN2ZiNjU3ODFjZjhmMWJkMGQwYjY2ZTVmNTZhMjYxZjJmOTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1NzdkZWNhOWY5NzNiMzI0ODBjMGJlNzBlMmFmNGU5OWM0NTlhNTNlIn0=','2018-09-08 09:48:56.147095'),('srgfmi1vvtqf95kia2ut1e8pkmi1ae9f','ZjViMmYyN2ZiNjU3ODFjZjhmMWJkMGQwYjY2ZTVmNTZhMjYxZjJmOTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1NzdkZWNhOWY5NzNiMzI0ODBjMGJlNzBlMmFmNGU5OWM0NTlhNTNlIn0=','2018-09-09 13:53:48.257805');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-08-30 12:33:48
